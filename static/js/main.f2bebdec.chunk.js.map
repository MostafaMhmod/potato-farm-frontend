{"version":3,"sources":["components/Navbar.js","img/usd.png","components/vault.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","target","rel","id","this","props","account","Component","Vault","scope","window","web3","utils","fromWei","stakingBalance","potatoTokenBalance","onSubmit","event","amount","preventDefault","depositInput","value","toString","toWei","stakeTokens","usdTokenBalance","type","ref","placeholder","required","src","usd","height","alt","withdrawInput","unstakeTokens","onClick","App","approveUsdTokensAllowance","a","state","usdToken","methods","approve","simpleChef","_address","send","from","on","setState","usdAllowanceApproved","deposit","hash","wihdraw","handleMintUsd","e","mint","showUsdMintButton","potatoToken","loading","loadWeb3","loadBlockchainData","checkAllowance","checkUsdBalance","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","Contract","usdAbi","abi","addresses","balanceOf","call","potatoAbi","potato","simpleChefAbi","allowance","usdTokenAllowance","console","log","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2bebdec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <p\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 mb-0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          üßë‚Äçüåæ &nbsp; Potato Farm\n        </p>\n\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/usd.c4477cfc.png\";","import React, { Component } from \"react\";\nimport usd from \"../img/usd.png\";\n\nclass Vault extends Component {\n  render() {\n    return (\n      <div id=\"content\" className=\"mt-3\">\n        <table className=\"table table-borderless text-muted text-center\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Staking Balance</th>\n              <th scope=\"col\">Potato Balance</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                {window.web3.utils.fromWei(this.props.stakingBalance, \"Ether\")}{\" \"}\n                USD\n              </td>\n              <td>\n                {window.web3.utils.fromWei(\n                  this.props.potatoTokenBalance,\n                  \"Ether\"\n                )}{\" \"}\n                Potato\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"card mb-4\">\n              <div className=\"card-body\">\n                <form\n                  className=\"mb-3\"\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    let amount;\n                    amount = this.depositInput.value.toString();\n                    amount = window.web3.utils.toWei(amount, \"Ether\");\n                    this.props.stakeTokens(amount);\n                  }}\n                >\n                  <div>\n                    <label className=\"float-left\">\n                      <b>Deposit</b>\n                    </label>\n                    <span className=\"float-right text-muted\">\n                      Balance:{\" \"}\n                      {window.web3.utils.fromWei(\n                        this.props.usdTokenBalance,\n                        \"Ether\"\n                      )}\n                    </span>\n                  </div>\n                  <div className=\"input-group mb-4\">\n                    <input\n                      type=\"text\"\n                      ref={(depositInput) => {\n                        this.depositInput = depositInput;\n                      }}\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"0\"\n                      required\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">\n                        <img src={usd} height=\"32\" alt=\"\" />\n                        &nbsp;&nbsp;&nbsp; USD\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block btn-lg\"\n                  >\n                    Deposit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card mb-4\">\n              <div className=\"card-body\">\n                <form\n                  className=\"mb-3\"\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    let amount;\n                    amount = this.withdrawInput.value.toString();\n                    amount = window.web3.utils.toWei(amount, \"Ether\");\n                    this.props.unstakeTokens(amount);\n                  }}\n                >\n                  <div>\n                    <label className=\"float-left\">\n                      <b>Withdraw</b>\n                    </label>\n                    <span className=\"float-right text-muted\">\n                      Balance:{\" \"}\n                      {window.web3.utils.fromWei(\n                        this.props.stakingBalance,\n                        \"Ether\"\n                      )}\n                    </span>\n                  </div>\n                  <div className=\"input-group mb-4\">\n                    <input\n                      type=\"text\"\n                      ref={(withdrawInput) => {\n                        this.withdrawInput = withdrawInput;\n                      }}\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"0\"\n                      required\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">\n                        <img src={usd} height=\"32\" alt=\"\" />\n                        &nbsp;&nbsp;&nbsp; USD\n                      </div>\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-danger btn-block btn-lg\"\n                  >\n                    Withdraw\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"row\">\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              this.props.stakeTokens(0);\n            }}\n            className=\"btn btn-success btn-block btn-lg\"\n          >\n            Harvest\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Vault;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Web3 from \"web3\";\nimport usdAbi from \"./abis/Usd.json\";\nimport potatoAbi from \"./abis/Potato.json\";\nimport simpleChefAbi from \"./abis/SimpleChef.json\";\nimport addresses from \"./utils/addresses.json\";\nimport Vault from \"./components/vault\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"0x0\",\n      usdToken: {},\n      potatoToken: {},\n      simpleChef: {},\n      usdTokenBalance: \"0\",\n      potatoTokenBalance: \"0\",\n      stakingBalance: \"0\",\n      loading: true,\n      usdAllowanceApproved: false,\n      showUsdMintButton: false,\n      web3: null,\n    };\n  }\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.checkAllowance();\n    await this.checkUsdBalance();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      this.state.web3 = new Web3(window.ethereum);\n      window.web3 = this.state.web3;\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n\n    if (networkId !== 3)\n      window.alert(\"Please switch to the Roposten Network from Metamask\");\n\n    // Load usdToken\n    const usdToken = new web3.eth.Contract(usdAbi.abi, addresses.usd);\n    this.setState({ usdToken });\n    let usdTokenBalance = await usdToken.methods\n      .balanceOf(this.state.account)\n      .call();\n    this.setState({ usdTokenBalance: usdTokenBalance.toString() });\n\n    // // Load potatoToken\n    const potatoToken = new web3.eth.Contract(potatoAbi.abi, addresses.potato);\n    this.setState({ potatoToken });\n    let potatoTokenBalance = await potatoToken.methods\n      .balanceOf(this.state.account)\n      .call();\n    this.setState({ potatoTokenBalance: potatoTokenBalance.toString() });\n\n    // Load simpleChef\n    const simpleChef = new web3.eth.Contract(\n      simpleChefAbi.abi,\n      addresses.simpleChef\n    );\n    this.setState({ simpleChef });\n    let stakingBalance = await simpleChef.methods\n      .stakingBalance(this.state.account)\n      .call();\n    this.setState({ stakingBalance: stakingBalance.toString() });\n\n    this.setState({ loading: false });\n  }\n\n  async checkAllowance() {\n    let usdTokenAllowance = await this.state.usdToken.methods\n      .allowance(this.state.account, addresses.simpleChef)\n      .call();\n    console.log(\"usdTokenAllowance\");\n    console.log(usdTokenAllowance);\n    if (usdTokenAllowance >= this.state.usdTokenBalance)\n      this.setState({ usdAllowanceApproved: true });\n  }\n  checkUsdBalance() {\n    if (this.state.stakingBalance > 0)\n      return this.setState({ showUsdMintButton: false });\n    if (this.state.usdTokenBalance > 0)\n      return this.setState({ showUsdMintButton: false });\n    return this.setState({ showUsdMintButton: true });\n  }\n  approveUsdTokensAllowance = async () => {\n    await this.state.usdToken.methods\n      .approve(this.state.simpleChef._address, this.state.usdTokenBalance)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", () => {\n        this.setState({ usdAllowanceApproved: true });\n      });\n  };\n  stakeTokens = async (amount) => {\n    if (!this.state.usdAllowanceApproved)\n      await this.approveUsdTokensAllowance();\n    this.state.simpleChef.methods\n      .deposit(amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {});\n  };\n\n  unstakeTokens = async (amount) => {\n    if (!this.state.usdAllowanceApproved)\n      await this.approveUsdTokensAllowance();\n    this.state.simpleChef.methods\n      .wihdraw(amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {});\n  };\n  handleMintUsd = async (e) => {\n    this.state.usdToken.methods\n      .mint(this.state.account, this.state.web3.utils.toWei(\"1000\", \"Ether\"))\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ showUsdMintButton: false });\n      });\n  };\n  render() {\n    let content;\n    if (this.state.loading) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      );\n    } else {\n      content = (\n        <Vault\n          usdTokenBalance={this.state.usdTokenBalance}\n          potatoTokenBalance={this.state.potatoTokenBalance}\n          stakingBalance={this.state.stakingBalance}\n          stakeTokens={this.stakeTokens}\n          unstakeTokens={this.unstakeTokens}\n        />\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row col-6 offset-3\">\n            {this.state.showUsdMintButton ? (\n              <button\n                className=\"btn btn-success btn-block btn-lg0\"\n                onClick={this.handleMintUsd}\n              >\n                Mint Test USD\n              </button>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"row\">\n            <div className=\"content mr-auto ml-auto\">{content}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}