{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Potato",
          "name": "_potato",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserRewardDept",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accPotatoPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potato",
      "outputs": [
        {
          "internalType": "contract Potato",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potatoPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usd",
      "outputs": [
        {
          "internalType": "contract Usd",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Potato.sol",
    "1": "contracts/SafeMath.sol",
    "2": "contracts/SimpleChef.sol",
    "3": "contracts/Usd.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleChef.sol",
    "exportedSymbols": {
      "SimpleChef": [
        738
      ]
    },
    "id": 739,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 343,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/Potato.sol",
        "file": "./Potato.sol",
        "id": 344,
        "nodeType": "ImportDirective",
        "scope": 739,
        "sourceUnit": 342,
        "src": "25:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Usd.sol",
        "file": "./Usd.sol",
        "id": 345,
        "nodeType": "ImportDirective",
        "scope": 739,
        "sourceUnit": 1199,
        "src": "48:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 738,
        "linearizedBaseContracts": [
          738
        ],
        "name": "SimpleChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 348,
            "libraryName": {
              "contractScope": null,
              "id": 346,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 934,
              "src": "101:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$934",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "95:27:2",
            "typeName": {
              "id": 347,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "114:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f8dcc9a9",
            "id": 350,
            "mutability": "mutable",
            "name": "potato",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "128:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Potato_$341",
              "typeString": "contract Potato"
            },
            "typeName": {
              "contractScope": null,
              "id": 349,
              "name": "Potato",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 341,
              "src": "128:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Potato_$341",
                "typeString": "contract Potato"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d63a6ccd",
            "id": 352,
            "mutability": "mutable",
            "name": "usd",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "154:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Usd_$1198",
              "typeString": "contract Usd"
            },
            "typeName": {
              "contractScope": null,
              "id": 351,
              "name": "Usd",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1198,
              "src": "154:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Usd_$1198",
                "typeString": "contract Usd"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 354,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "175:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 353,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f8d181",
            "id": 356,
            "mutability": "mutable",
            "name": "lastRewardBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "206:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 355,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "206:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f64038c",
            "id": 358,
            "mutability": "mutable",
            "name": "potatoPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "242:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 357,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "242:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d920cb8",
            "id": 360,
            "mutability": "mutable",
            "name": "accPotatoPerShare",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "277:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 359,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 363,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "316:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 361,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 362,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "316:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 367,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "346:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 366,
              "keyType": {
                "id": 364,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "346:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 365,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "365:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2066395",
            "id": 371,
            "mutability": "mutable",
            "name": "UserRewardDept",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "401:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 370,
              "keyType": {
                "id": 368,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "409:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "420:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 375,
            "mutability": "mutable",
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "456:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 374,
              "keyType": {
                "id": 372,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "464:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "456:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 373,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "475:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 379,
            "mutability": "mutable",
            "name": "isStaking",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 738,
            "src": "503:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 378,
              "keyType": {
                "id": 376,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "511:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "503:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 377,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "522:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "586:68:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 384,
                      "name": "potato",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "596:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Potato_$341",
                        "typeString": "contract Potato"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "_potato",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "605:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Potato_$341",
                        "typeString": "contract Potato"
                      }
                    },
                    "src": "596:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Potato_$341",
                      "typeString": "contract Potato"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "596:16:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 388,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "622:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "635:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "635:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "622:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "622:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 394,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_potato",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 394,
                  "src": "563:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Potato_$341",
                    "typeString": "contract Potato"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 380,
                    "name": "Potato",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 341,
                    "src": "563:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Potato_$341",
                      "typeString": "contract Potato"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "562:16:2"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:2"
            },
            "scope": 738,
            "src": "551:103:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "836:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "861:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "853:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "853:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "853:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 402,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "846:21:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 409,
                  "src": "750:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 409,
                  "src": "765:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "749:28:2"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 409,
                  "src": "823:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:9:2"
            },
            "scope": 738,
            "src": "727:147:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "905:571:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "919:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "919:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "935:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "919:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 418,
                  "nodeType": "IfStatement",
                  "src": "915:68:2",
                  "trueBody": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "952:31:2",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 411,
                        "id": 416,
                        "nodeType": "Return",
                        "src": "966:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "usdBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 483,
                      "src": "992:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1035:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1027:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1027:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1027:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 421,
                        "name": "usd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "1013:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Usd_$1198",
                          "typeString": "contract Usd"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1033,
                      "src": "1013:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:49:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 429,
                      "name": "usdBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1055:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1069:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1055:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 439,
                  "nodeType": "IfStatement",
                  "src": "1051:96:2",
                  "trueBody": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "1072:75:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 432,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1086:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1104:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1104:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1086:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 436,
                        "nodeType": "ExpressionStatement",
                        "src": "1086:30:2"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 411,
                        "id": 437,
                        "nodeType": "Return",
                        "src": "1130:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 483,
                      "src": "1156:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1156:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "lastRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "1191:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 444,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1208:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1208:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 442,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "1177:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1156:65:2"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 483,
                      "src": "1231:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1231:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "potatoPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "1263:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "multiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "1248:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 847,
                      "src": "1248:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1231:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 460,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1308:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1300:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1300:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1300:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "1315:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "potato",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "1288:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Potato_$341",
                          "typeString": "contract Potato"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 322,
                      "src": "1288:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1288:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "1288:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 465,
                      "name": "accPotatoPerShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "1332:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 473,
                              "name": "usdBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "1408:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1398:4:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 468,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 449,
                                  "src": "1387:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 847,
                                "src": "1387:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1387:16:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 864,
                            "src": "1387:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1387:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "accPotatoPerShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "1352:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 767,
                        "src": "1352:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1352:77:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1332:97:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "1439:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1457:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1457:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1439:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:30:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a2e62045",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:2"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:2"
            },
            "scope": 738,
            "src": "880:596:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "1523:948:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 489,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "1533:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1533:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:8:2"
                },
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 602,
                      "src": "1551:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1551:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 498,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 494,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "1573:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 497,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1588:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1588:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1573:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1551:48:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "userBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1613:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1627:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1613:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 530,
                  "nodeType": "IfStatement",
                  "src": "1609:272:2",
                  "trueBody": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "1630:251:2",
                    "statements": [
                      {
                        "assignments": [
                          503
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 503,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 529,
                            "src": "1644:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 502,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1644:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 517,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 512,
                                "name": "UserRewardDept",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 371,
                                "src": "1728:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 515,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 513,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1743:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1743:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1728:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1701:4:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 506,
                                      "name": "accPotatoPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 360,
                                      "src": "1678:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 504,
                                      "name": "userBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 493,
                                      "src": "1662:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 847,
                                    "src": "1662:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1662:34:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 864,
                                "src": "1662:38:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1662:44:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "1662:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:106:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1644:124:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 518,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 503,
                            "src": "1786:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1796:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1786:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 528,
                        "nodeType": "IfStatement",
                        "src": "1782:89:2",
                        "trueBody": {
                          "id": 527,
                          "nodeType": "Block",
                          "src": "1799:72:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 522,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1836:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1836:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 524,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "1848:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 521,
                                  "name": "safePotatoTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 737,
                                  "src": "1817:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1817:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 526,
                              "nodeType": "ExpressionStatement",
                              "src": "1817:39:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "1894:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1904:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1894:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 588,
                  "nodeType": "IfStatement",
                  "src": "1890:470:2",
                  "trueBody": {
                    "id": 587,
                    "nodeType": "Block",
                    "src": "1907:453:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 539,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1946:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1946:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1938:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 537,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1938:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1938:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 544,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1967:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimpleChef_$738",
                                    "typeString": "contract SimpleChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimpleChef_$738",
                                    "typeString": "contract SimpleChef"
                                  }
                                ],
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1959:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 542,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1959:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1959:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 546,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "1974:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 534,
                              "name": "usd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "1921:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Usd_$1198",
                                "typeString": "contract Usd"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1197,
                            "src": "1921:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1921:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 548,
                        "nodeType": "ExpressionStatement",
                        "src": "1921:61:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 549,
                              "name": "stakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "1996:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 552,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 550,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2011:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2011:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1996:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 555,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "2041:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 553,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "2025:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 767,
                              "src": "2025:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2025:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1996:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 558,
                        "nodeType": "ExpressionStatement",
                        "src": "1996:53:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2147:22:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "hasStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "2148:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 562,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 560,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2158:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2158:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2148:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 572,
                        "nodeType": "IfStatement",
                        "src": "2143:85:2",
                        "trueBody": {
                          "id": 571,
                          "nodeType": "Block",
                          "src": "2171:57:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 567,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2202:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2202:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 564,
                                    "name": "stakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "2189:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2189:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2189:24:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 570,
                              "nodeType": "ExpressionStatement",
                              "src": "2189:24:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 573,
                              "name": "isStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "2279:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 576,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2289:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2289:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2279:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2303:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2279:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "2279:28:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 580,
                              "name": "hasStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "2321:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 583,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 581,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2331:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2331:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2321:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2345:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2321:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 586,
                        "nodeType": "ExpressionStatement",
                        "src": "2321:28:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 589,
                        "name": "UserRewardDept",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "2369:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 592,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2384:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2384:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2369:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2450:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 595,
                              "name": "accPotatoPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "2414:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 593,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "2398:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 847,
                            "src": "2398:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 864,
                        "src": "2398:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2398:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2369:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:95:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 603,
                  "src": "1499:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1498:17:2"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:0:2"
            },
            "scope": 738,
            "src": "1482:989:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "2519:687:2",
              "statements": [
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 698,
                      "src": "2529:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2529:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 614,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "2551:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 613,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2566:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2566:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2551:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2529:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 616,
                          "name": "userBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "2595:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 617,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "2610:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2595:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2619:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4322fa1e5ca479eb7e3e47e59bcce1b037968e6cc60044edcfbbf43798afc40",
                          "typeString": "literal_string \"withdraw: not enough staked balance\""
                        },
                        "value": "withdraw: not enough staked balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4322fa1e5ca479eb7e3e47e59bcce1b037968e6cc60044edcfbbf43798afc40",
                          "typeString": "literal_string \"withdraw: not enough staked balance\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2587:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 622,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "2667:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2667:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "2667:8:2"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 698,
                      "src": "2685:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2685:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 635,
                          "name": "UserRewardDept",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "2765:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 638,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 636,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2780:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2780:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2765:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2742:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "accPotatoPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 360,
                                "src": "2719:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 627,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "2703:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 847,
                              "src": "2703:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2703:34:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 864,
                          "src": "2703:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2703:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "2703:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2685:116:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 641,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "2815:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2825:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2815:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 651,
                  "nodeType": "IfStatement",
                  "src": "2811:81:2",
                  "trueBody": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "2828:64:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 645,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2861:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2861:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 647,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "2873:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 644,
                            "name": "safePotatoTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "2842:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2842:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "2842:39:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 652,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "2905:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2915:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2905:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "2901:194:2",
                  "trueBody": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "2918:177:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 655,
                              "name": "stakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "2932:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 658,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 656,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2947:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2947:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2932:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 661,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 605,
                                "src": "2977:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 659,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "2961:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 784,
                              "src": "2961:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2961:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2932:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 664,
                        "nodeType": "ExpressionStatement",
                        "src": "2932:53:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "isStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "2999:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 668,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 666,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3009:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3009:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2999:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3023:5:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2999:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "2999:29:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 677,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3063:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3063:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3055:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 675,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3055:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3055:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 680,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "3076:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 672,
                              "name": "usd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "3042:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Usd_$1198",
                                "typeString": "contract Usd"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1147,
                            "src": "3042:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3042:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "3042:42:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "UserRewardDept",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "3104:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 688,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3119:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3119:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3104:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3185:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "accPotatoPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "3149:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 689,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "3133:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 847,
                            "src": "3133:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3133:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 864,
                        "src": "3133:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3133:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3104:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:95:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 699,
                  "src": "2495:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2494:17:2"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2519:0:2"
            },
            "scope": 738,
            "src": "2477:729:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "3388:218:2",
              "statements": [
                {
                  "assignments": [
                    707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 707,
                      "mutability": "mutable",
                      "name": "potatoBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 736,
                      "src": "3398:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 706,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 715,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 712,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3443:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$738",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 710,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3435:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "potato",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3418:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Potato_$341",
                          "typeString": "contract Potato"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105,
                      "src": "3418:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3418:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3398:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 716,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "3463:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "potatoBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "3473:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3463:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "3546:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 730,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "3576:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 731,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 703,
                              "src": "3581:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "potato",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "3560:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Potato_$341",
                                "typeString": "contract Potato"
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "3560:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3560:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "3560:29:2"
                      }
                    ]
                  },
                  "id": 735,
                  "nodeType": "IfStatement",
                  "src": "3459:141:2",
                  "trueBody": {
                    "id": 726,
                    "nodeType": "Block",
                    "src": "3484:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 722,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "3514:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 723,
                              "name": "potatoBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "3519:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 719,
                              "name": "potato",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "3498:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Potato_$341",
                                "typeString": "contract Potato"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "3498:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3498:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 725,
                        "nodeType": "ExpressionStatement",
                        "src": "3498:31:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safePotatoTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "3349:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "3362:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3362:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3348:30:2"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3388:0:2"
            },
            "scope": 738,
            "src": "3321:285:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 739,
        "src": "69:3539:2"
      }
    ],
    "src": "0:3609:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610c9d380380610c9d8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b031990921691909117905543600255610c34806100696000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2e6204511610097578063d63a6ccd11610066578063d63a6ccd14610219578063f20663951461023d578063f8dcc9a914610263578063fd5e6dd11461026b576100f5565b8063a2e62045146101c6578063a9f8d181146101ce578063b6b55f25146101d6578063c93c8f34146101f3576100f5565b80636f49712b116100d35780636f49712b146101595780637f64038c146101935780638d920cb81461019b5780638dbb1e3a146101a3576100f5565b80632e1a7d4d146100fa57806345bc78ab1461011957806348cd4cb114610151575b600080fd5b6101176004803603602081101561011057600080fd5b5035610288565b005b61013f6004803603602081101561012f57600080fd5b50356001600160a01b031661040f565b60408051918252519081900360200190f35b61013f610421565b61017f6004803603602081101561016f57600080fd5b50356001600160a01b0316610427565b604080519115158252519081900360200190f35b61013f61043c565b61013f610442565b61013f600480360360408110156101b957600080fd5b5080359060200135610448565b61011761045d565b61013f6105bb565b610117600480360360208110156101ec57600080fd5b50356105c1565b61017f6004803603602081101561020957600080fd5b50356001600160a01b0316610783565b610221610798565b604080516001600160a01b039092168252519081900360200190f35b61013f6004803603602081101561025357600080fd5b50356001600160a01b03166107a7565b6102216107b9565b6102216004803603602081101561028157600080fd5b50356107c8565b33600090815260076020526040902054818110156102d75760405162461bcd60e51b8152600401808060200182810382526023815260200180610bdc6023913960400191505060405180910390fd5b6102df61045d565b3360009081526008602052604081205460055461031991906103139064e8d4a510009061030d9087906107ef565b90610848565b9061088a565b9050801561032b5761032b33826108cc565b82156103dc5761033b828461088a565b33600081815260076020908152604080832094909455600a8152838220805460ff19169055600154845163a9059cbb60e01b815260048101949094526024840188905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050506040513d60208110156103d957600080fd5b50505b6103fa64e8d4a5100061030d600554856107ef90919063ffffffff16565b33600090815260086020526040902055505050565b60076020526000908152604090205481565b60025481565b600a6020526000908152604090205460ff1681565b60045481565b60055481565b6000610454828461088a565b90505b92915050565b600354431161046b576105b9565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156104b657600080fd5b505afa1580156104ca573d6000803e3d6000fd5b505050506040513d60208110156104e057600080fd5b50519050806104f35750436003556105b9565b600061050160035443610448565b9050600061051a600454836107ef90919063ffffffff16565b60008054604080516340c10f1960e01b81523060048201526024810185905290519394506001600160a01b03909116926340c10f199260448084019391929182900301818387803b15801561056e57600080fd5b505af1158015610582573d6000803e3d6000fd5b505050506105ae6105a58461030d64e8d4a51000856107ef90919063ffffffff16565b60055490610a64565b600555505043600355505b565b60035481565b6105c961045d565b336000908152600760205260409020548015610621573360009081526008602052604081205460055461060d91906103139064e8d4a510009061030d9087906107ef565b9050801561061f5761061f33826108cc565b505b811561075157600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561068157600080fd5b505af1158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b506106b890508183610a64565b3360009081526007602090815260408083209390935560099052205460ff1661071e57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b336000908152600a602090815260408083208054600160ff19918216811790925560099093529220805490911690911790555b61076f64e8d4a5100061030d600554846107ef90919063ffffffff16565b336000908152600860205260409020555050565b60096020526000908152604090205460ff1681565b6001546001600160a01b031681565b60086020526000908152604090205481565b6000546001600160a01b031681565b600681815481106107d557fe5b6000918252602090912001546001600160a01b0316905081565b6000826107fe57506000610457565b8282028284828161080b57fe5b04146104545760405162461bcd60e51b8152600401808060200182810382526021815260200180610bbb6021913960400191505060405180910390fd5b600061045483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610abe565b600061045483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b60565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561091857600080fd5b505afa15801561092c573d6000803e3d6000fd5b505050506040513d602081101561094257600080fd5b50519050808211156109d957600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b1580156109a757600080fd5b505af11580156109bb573d6000803e3d6000fd5b505050506040513d60208110156109d157600080fd5b50610a5f9050565b600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b50505b505050565b600082820183811015610454576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610b4a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b0f578181015183820152602001610af7565b50505050905090810190601f168015610b3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b5657fe5b0495945050505050565b60008184841115610bb25760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b0f578181015183820152602001610af7565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7777697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365a2646970667358221220a39b53909219451e8494256de2c793eb770157dee1924cd2ff490deceda29ddd64736f6c634300060c0033",
  "bytecodeSha1": "3f7f3f679ac02a1456645d81e265bb5204a6cc1e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SimpleChef",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "43": [
            953,
            959,
            true
          ]
        },
        "SafeMath.div": {
          "44": [
            3793,
            3798,
            true
          ]
        },
        "SafeMath.mul": {
          "41": [
            2446,
            2452,
            false
          ],
          "42": [
            2532,
            2542,
            true
          ]
        },
        "SafeMath.sub": {
          "45": [
            1826,
            1832,
            true
          ]
        }
      },
      "2": {
        "SimpleChef.deposit": {
          "36": [
            1613,
            1628,
            false
          ],
          "37": [
            1786,
            1797,
            false
          ],
          "38": [
            1894,
            1905,
            false
          ],
          "39": [
            2148,
            2169,
            false
          ]
        },
        "SimpleChef.safePotatoTransfer": {
          "40": [
            3463,
            3482,
            false
          ]
        },
        "SimpleChef.update": {
          "34": [
            919,
            950,
            false
          ],
          "35": [
            1055,
            1070,
            false
          ]
        },
        "SimpleChef.withdraw": {
          "31": [
            2595,
            2617,
            true
          ],
          "32": [
            2815,
            2826,
            false
          ],
          "33": [
            2905,
            2916,
            false
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "28": [
            945,
            991
          ]
        },
        "SafeMath.div": {
          "24": [
            3145,
            3191
          ],
          "29": [
            3785,
            3813
          ]
        },
        "SafeMath.mul": {
          "22": [
            2468,
            2476
          ],
          "23": [
            2524,
            2580
          ]
        },
        "SafeMath.sub": {
          "25": [
            1365,
            1415
          ],
          "30": [
            1818,
            1847
          ]
        }
      },
      "2": {
        "SimpleChef.deposit": {
          "14": [
            1533,
            1541
          ],
          "15": [
            1817,
            1856
          ],
          "16": [
            1921,
            1982
          ],
          "17": [
            1996,
            2049
          ],
          "18": [
            2189,
            2213
          ],
          "19": [
            2279,
            2307
          ],
          "20": [
            2321,
            2349
          ],
          "21": [
            2369,
            2464
          ]
        },
        "SimpleChef.getMultiplier": {
          "7": [
            846,
            867
          ]
        },
        "SimpleChef.safePotatoTransfer": {
          "26": [
            3498,
            3529
          ],
          "27": [
            3560,
            3589
          ]
        },
        "SimpleChef.update": {
          "8": [
            966,
            973
          ],
          "9": [
            1086,
            1116
          ],
          "10": [
            1130,
            1137
          ],
          "11": [
            1288,
            1322
          ],
          "12": [
            1332,
            1429
          ],
          "13": [
            1439,
            1469
          ]
        },
        "SimpleChef.withdraw": {
          "0": [
            2587,
            2657
          ],
          "1": [
            2667,
            2675
          ],
          "2": [
            2842,
            2881
          ],
          "3": [
            2932,
            2985
          ],
          "4": [
            2999,
            3028
          ],
          "5": [
            3042,
            3084
          ],
          "6": [
            3104,
            3199
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "Potato",
    "SafeMath",
    "Usd"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2e6204511610097578063d63a6ccd11610066578063d63a6ccd14610219578063f20663951461023d578063f8dcc9a914610263578063fd5e6dd11461026b576100f5565b8063a2e62045146101c6578063a9f8d181146101ce578063b6b55f25146101d6578063c93c8f34146101f3576100f5565b80636f49712b116100d35780636f49712b146101595780637f64038c146101935780638d920cb81461019b5780638dbb1e3a146101a3576100f5565b80632e1a7d4d146100fa57806345bc78ab1461011957806348cd4cb114610151575b600080fd5b6101176004803603602081101561011057600080fd5b5035610288565b005b61013f6004803603602081101561012f57600080fd5b50356001600160a01b031661040f565b60408051918252519081900360200190f35b61013f610421565b61017f6004803603602081101561016f57600080fd5b50356001600160a01b0316610427565b604080519115158252519081900360200190f35b61013f61043c565b61013f610442565b61013f600480360360408110156101b957600080fd5b5080359060200135610448565b61011761045d565b61013f6105bb565b610117600480360360208110156101ec57600080fd5b50356105c1565b61017f6004803603602081101561020957600080fd5b50356001600160a01b0316610783565b610221610798565b604080516001600160a01b039092168252519081900360200190f35b61013f6004803603602081101561025357600080fd5b50356001600160a01b03166107a7565b6102216107b9565b6102216004803603602081101561028157600080fd5b50356107c8565b33600090815260076020526040902054818110156102d75760405162461bcd60e51b8152600401808060200182810382526023815260200180610bdc6023913960400191505060405180910390fd5b6102df61045d565b3360009081526008602052604081205460055461031991906103139064e8d4a510009061030d9087906107ef565b90610848565b9061088a565b9050801561032b5761032b33826108cc565b82156103dc5761033b828461088a565b33600081815260076020908152604080832094909455600a8152838220805460ff19169055600154845163a9059cbb60e01b815260048101949094526024840188905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050506040513d60208110156103d957600080fd5b50505b6103fa64e8d4a5100061030d600554856107ef90919063ffffffff16565b33600090815260086020526040902055505050565b60076020526000908152604090205481565b60025481565b600a6020526000908152604090205460ff1681565b60045481565b60055481565b6000610454828461088a565b90505b92915050565b600354431161046b576105b9565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156104b657600080fd5b505afa1580156104ca573d6000803e3d6000fd5b505050506040513d60208110156104e057600080fd5b50519050806104f35750436003556105b9565b600061050160035443610448565b9050600061051a600454836107ef90919063ffffffff16565b60008054604080516340c10f1960e01b81523060048201526024810185905290519394506001600160a01b03909116926340c10f199260448084019391929182900301818387803b15801561056e57600080fd5b505af1158015610582573d6000803e3d6000fd5b505050506105ae6105a58461030d64e8d4a51000856107ef90919063ffffffff16565b60055490610a64565b600555505043600355505b565b60035481565b6105c961045d565b336000908152600760205260409020548015610621573360009081526008602052604081205460055461060d91906103139064e8d4a510009061030d9087906107ef565b9050801561061f5761061f33826108cc565b505b811561075157600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561068157600080fd5b505af1158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b506106b890508183610a64565b3360009081526007602090815260408083209390935560099052205460ff1661071e57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b336000908152600a602090815260408083208054600160ff19918216811790925560099093529220805490911690911790555b61076f64e8d4a5100061030d600554846107ef90919063ffffffff16565b336000908152600860205260409020555050565b60096020526000908152604090205460ff1681565b6001546001600160a01b031681565b60086020526000908152604090205481565b6000546001600160a01b031681565b600681815481106107d557fe5b6000918252602090912001546001600160a01b0316905081565b6000826107fe57506000610457565b8282028284828161080b57fe5b04146104545760405162461bcd60e51b8152600401808060200182810382526021815260200180610bbb6021913960400191505060405180910390fd5b600061045483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610abe565b600061045483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b60565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561091857600080fd5b505afa15801561092c573d6000803e3d6000fd5b505050506040513d602081101561094257600080fd5b50519050808211156109d957600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b1580156109a757600080fd5b505af11580156109bb573d6000803e3d6000fd5b505050506040513d60208110156109d157600080fd5b50610a5f9050565b600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b50505b505050565b600082820183811015610454576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610b4a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b0f578181015183820152602001610af7565b50505050905090810190601f168015610b3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b5657fe5b0495945050505050565b60008184841115610bb25760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b0f578181015183820152602001610af7565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7777697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365a2646970667358221220a39b53909219451e8494256de2c793eb770157dee1924cd2ff490deceda29ddd64736f6c634300060c0033",
  "deployedSourceMap": "69:3539:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:729;;;;;;;;;;;;;;;;-1:-1:-1;2477:729:2;;:::i;:::-;;346:49;;;;;;;;;;;;;;;;-1:-1:-1;346:49:2;-1:-1:-1;;;;;346:49:2;;:::i;:::-;;;;;;;;;;;;;;;;175:25;;;:::i;503:41::-;;;;;;;;;;;;;;;;-1:-1:-1;503:41:2;-1:-1:-1;;;;;503:41:2;;:::i;:::-;;;;;;;;;;;;;;;;;;242:29;;;:::i;277:32::-;;;:::i;727:147::-;;;;;;;;;;;;;;;;-1:-1:-1;727:147:2;;;;;;;:::i;880:596::-;;;:::i;206:30::-;;;:::i;1482:989::-;;;;;;;;;;;;;;;;-1:-1:-1;1482:989:2;;:::i;456:41::-;;;;;;;;;;;;;;;;-1:-1:-1;456:41:2;-1:-1:-1;;;;;456:41:2;;:::i;154:14::-;;;:::i;:::-;;;;-1:-1:-1;;;;;154:14:2;;;;;;;;;;;;;;401:49;;;;;;;;;;;;;;;;-1:-1:-1;401:49:2;-1:-1:-1;;;;;401:49:2;;:::i;128:20::-;;;:::i;316:24::-;;;;;;;;;;;;;;;;-1:-1:-1;316:24:2;;:::i;2477:729::-;2566:10;2529:19;2551:26;;;:14;:26;;;;;;2595:22;;;;2587:70;;;;-1:-1:-1;;;2587:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2667:8;:6;:8::i;:::-;2780:10;2685:15;2765:26;;;:14;:26;;;;;;2719:17;;2703:98;;2765:26;2703:44;;2742:4;;2703:34;;:11;;:15;:34::i;:::-;:38;;:44::i;:::-;:48;;:98::i;:::-;2685:116;-1:-1:-1;2815:11:2;;2811:81;;2842:39;2861:10;2873:7;2842:18;:39::i;:::-;2905:11;;2901:194;;2961:24;:11;2977:7;2961:15;:24::i;:::-;2947:10;2932:26;;;;:14;:26;;;;;;;;:53;;;;2999:9;:21;;;;;:29;;-1:-1:-1;;2999:29:2;;;-1:-1:-1;3042:3:2;:42;;-1:-1:-1;;;3042:42:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3042:3:2;;;;:12;;:42;;;;;;;;;;;;;:3;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2901:194:2;3133:66;3185:4;3133:34;3149:17;;3133:11;:15;;:34;;;;:::i;:66::-;3119:10;3104:26;;;;:14;:26;;;;;:95;-1:-1:-1;;;2477:729:2:o;346:49::-;;;;;;;;;;;;;:::o;175:25::-;;;;:::o;503:41::-;;;;;;;;;;;;;;;:::o;242:29::-;;;;:::o;277:32::-;;;;:::o;727:147::-;823:7;853:14;:3;861:5;853:7;:14::i;:::-;846:21;;727:147;;;;;:::o;880:596::-;935:15;;919:12;:31;915:68;;966:7;;915:68;1013:3;;:28;;;-1:-1:-1;;;1013:28:2;;1035:4;1013:28;;;;;;992:18;;-1:-1:-1;;;;;1013:3:2;;:13;;:28;;;;;;;;;;;;;;:3;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1013:28:2;;-1:-1:-1;1055:15:2;1051:96;;-1:-1:-1;1104:12:2;1086:15;:30;1130:7;;1051:96;1156:18;1177:44;1191:15;;1208:12;1177:13;:44::i;:::-;1156:65;;1231:14;1248:30;1263:14;;1248:10;:14;;:30;;;;:::i;:::-;1288:6;;;:34;;;-1:-1:-1;;;1288:34:2;;1308:4;1288:34;;;;;;;;;;;;1231:47;;-1:-1:-1;;;;;;1288:6:2;;;;:11;;:34;;;;;:6;;:34;;;;;;:6;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:77;1387:32;1408:10;1387:16;1398:4;1387:6;:10;;:16;;;;:::i;:32::-;1352:17;;;:21;:77::i;:::-;1332:17;:97;-1:-1:-1;;1457:12:2;1439:15;:30;-1:-1:-1;880:596:2;:::o;206:30::-;;;;:::o;1482:989::-;1533:8;:6;:8::i;:::-;1588:10;1551:19;1573:26;;;:14;:26;;;;;;1613:15;;1609:272;;1743:10;1644:15;1728:26;;;:14;:26;;;;;;1678:17;;1662:106;;1728:26;1662:44;;1701:4;;1662:34;;:11;;:15;:34::i;:106::-;1644:124;-1:-1:-1;1786:11:2;;1782:89;;1817:39;1836:10;1848:7;1817:18;:39::i;:::-;1609:272;;1894:11;;1890:470;;1921:3;;:61;;;-1:-1:-1;;;1921:61:2;;1946:10;1921:61;;;;1967:4;1921:61;;;;;;;;;;;;-1:-1:-1;;;;;1921:3:2;;;;:16;;:61;;;;;;;;;;;;;;;:3;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2025:24:2;;-1:-1:-1;2025:11:2;2041:7;2025:15;:24::i;:::-;2011:10;1996:26;;;;:14;:26;;;;;;;;:53;;;;2148:9;:21;;;;;;2143:85;;2189:7;:24;;;;;;;-1:-1:-1;2189:24:2;;;;;;;;-1:-1:-1;;;;;;2189:24:2;2202:10;2189:24;;;2143:85;2289:10;2279:21;;;;:9;:21;;;;;;;;:28;;2303:4;-1:-1:-1;;2279:28:2;;;;;;;;2321:9;:21;;;;;:28;;;;;;;;;;1890:470;2398:66;2450:4;2398:34;2414:17;;2398:11;:15;;:34;;;;:::i;:66::-;2384:10;2369:26;;;;:14;:26;;;;;:95;-1:-1:-1;;1482:989:2:o;456:41::-;;;;;;;;;;;;;;;:::o;154:14::-;;;-1:-1:-1;;;;;154:14:2;;:::o;401:49::-;;;;;;;;;;;;;:::o;128:20::-;;;-1:-1:-1;;;;;128:20:2;;:::o;316:24::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:24:2;;-1:-1:-1;316:24:2;:::o;2147:459:1:-;2205:7;2446:6;2442:45;;-1:-1:-1;2475:1:1;2468:8;;2442:45;2509:5;;;2513:1;2509;:5;:1;2532:5;;;;;:10;2524:56;;;;-1:-1:-1;;;2524:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3068:130;3126:7;3152:39;3156:1;3159;3152:39;;;;;;;;;;;;;;;;;:3;:39::i;1288:134::-;1346:7;1372:43;1376:1;1379;1372:43;;;;;;;;;;;;;;;;;:3;:43::i;3321:285:2:-;3398:17;3418:6;;:31;;;-1:-1:-1;;;3418:31:2;;3443:4;3418:31;;;;;;-1:-1:-1;;;;;3418:6:2;;;;:16;;:31;;;;;;;;;;;;;;;:6;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3418:31:2;;-1:-1:-1;3463:19:2;;;3459:141;;;3498:6;;;:31;;;-1:-1:-1;;;3498:31:2;;-1:-1:-1;;;;;3498:31:2;;;;;;;;;;;;;;;:6;;;;;:15;;:31;;;;;;;;;;;;;;;;;;:6;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3459:141:2;;-1:-1:-1;3459:141:2;;3560:6;;;:29;;;-1:-1:-1;;;3560:29:2;;-1:-1:-1;;;;;3560:29:2;;;;;;;;;;;;;;;:6;;;;;:15;;:29;;;;;;;;;;;;;;;;;;:6;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3459:141:2;3321:285;;;:::o;841:176:1:-;899:7;930:5;;;953:6;;;;945:46;;;;;-1:-1:-1;;;945:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:272;3766:7;3800:12;3793:5;3785:28;;;;-1:-1:-1;;;3785:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:9;3839:1;3835;:5;;;;;;;3680:272;-1:-1:-1;;;;;3680:272:1:o;1713:187::-;1799:7;1834:12;1826:6;;;;1818:29;;;;-1:-1:-1;;;1818:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1869:5:1;;;1713:187::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    69,
    3608
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2E62045 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD63A6CCD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD63A6CCD EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF2066395 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF8DCC9A9 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x26B JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xA2E62045 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC93C8F34 EQ PUSH2 0x1F3 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6F49712B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6F49712B EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x7F64038C EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x8D920CB8 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x1A3 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x421 JUMP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x43C JUMP JUMPDEST PUSH2 0x13F PUSH2 0x442 JUMP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x45D JUMP JUMPDEST PUSH2 0x13F PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x783 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBDC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DF PUSH2 0x45D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x313 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x30D SWAP1 DUP8 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP1 PUSH2 0x848 JUMP JUMPDEST SWAP1 PUSH2 0x88A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x32B JUMPI PUSH2 0x32B CALLER DUP3 PUSH2 0x8CC JUMP JUMPDEST DUP3 ISZERO PUSH2 0x3DC JUMPI PUSH2 0x33B DUP3 DUP5 PUSH2 0x88A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0xA DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP9 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x3FA PUSH5 0xE8D4A51000 PUSH2 0x30D PUSH1 0x5 SLOAD DUP6 PUSH2 0x7EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x454 DUP3 DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x46B JUMPI PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x4F3 JUMPI POP NUMBER PUSH1 0x3 SSTORE PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH1 0x3 SLOAD NUMBER PUSH2 0x448 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x51A PUSH1 0x4 SLOAD DUP4 PUSH2 0x7EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x40C10F19 SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x5AE PUSH2 0x5A5 DUP5 PUSH2 0x30D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x7EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP NUMBER PUSH1 0x3 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x45D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x621 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x313 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x30D SWAP1 DUP8 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x61F JUMPI PUSH2 0x61F CALLER DUP3 PUSH2 0x8CC JUMP JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x751 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B8 SWAP1 POP DUP2 DUP4 PUSH2 0xA64 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x71E JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x76F PUSH5 0xE8D4A51000 PUSH2 0x30D PUSH1 0x5 SLOAD DUP5 PUSH2 0x7EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7D5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7FE JUMPI POP PUSH1 0x0 PUSH2 0x457 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x80B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBBB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x454 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xABE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x454 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5F SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB0F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAF7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB3C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xB56 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xB0F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAF7 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7777697468647261773A KECCAK256 PUSH15 0x6F7420656E6F756768207374616B65 PUSH5 0x2062616C61 PUSH15 0x6365A2646970667358221220A39B53 SWAP1 SWAP3 NOT GASLIMIT 0x1E DUP5 SWAP5 0x25 PUSH14 0xE2C793EB770157DEE1924CD2FF49 0xD 0xEC 0xED LOG2 SWAP14 0xDD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA2E62045"
    },
    "38": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD63A6CCD"
    },
    "49": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD63A6CCD"
    },
    "60": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "64": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2066395"
    },
    "71": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D"
    },
    "75": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF8DCC9A9"
    },
    "82": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x263"
    },
    "86": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFD5E6DD1"
    },
    "93": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26B"
    },
    "97": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA2E62045"
    },
    "109": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6"
    },
    "113": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9F8D181"
    },
    "120": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "124": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB6B55F25"
    },
    "131": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D6"
    },
    "135": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC93C8F34"
    },
    "142": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F3"
    },
    "146": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6F49712B"
    },
    "158": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "GT",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6F49712B"
    },
    "169": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x159"
    },
    "173": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7F64038C"
    },
    "180": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x193"
    },
    "184": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D920CB8"
    },
    "191": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "195": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DBB1E3A"
    },
    "202": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3"
    },
    "206": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "213": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2E1A7D4D"
    },
    "218": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "224": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x45BC78AB"
    },
    "229": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119"
    },
    "233": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x48CD4CB1"
    },
    "240": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "EQ",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "244": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        69,
        3608
      ],
      "op": "REVERT",
      "path": "2"
    },
    "250": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "251": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "254": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "256": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "257": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "258": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "SUB",
      "path": "2"
    },
    "259": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "261": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "262": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "LT",
      "path": "2"
    },
    "263": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "264": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110"
    },
    "267": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "268": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "270": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "271": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "REVERT",
      "path": "2"
    },
    "272": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "273": {
      "op": "POP"
    },
    "274": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "275": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x288"
    },
    "278": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMP",
      "path": "2"
    },
    "279": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "280": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "STOP",
      "path": "2"
    },
    "281": {
      "offset": [
        346,
        395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "282": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "285": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "287": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "289": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SUB",
      "path": "2"
    },
    "290": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "292": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "293": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "LT",
      "path": "2"
    },
    "294": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "295": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F"
    },
    "298": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "299": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "301": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "302": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "REVERT",
      "path": "2"
    },
    "303": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "304": {
      "op": "POP"
    },
    "305": {
      "offset": [
        346,
        395
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "offset": [
        346,
        395
      ],
      "op": "AND",
      "path": "2"
    },
    "315": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40F"
    },
    "318": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        346,
        395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "319": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "320": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "322": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "323": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "324": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "325": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP3",
      "path": "2"
    },
    "326": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "327": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "328": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "329": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "330": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "331": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SUB",
      "path": "2"
    },
    "332": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "334": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "ADD",
      "path": "2"
    },
    "335": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "336": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "RETURN",
      "path": "2"
    },
    "337": {
      "offset": [
        175,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "338": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "341": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x421"
    },
    "344": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        175,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "345": {
      "offset": [
        503,
        544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "346": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F"
    },
    "349": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "351": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "352": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "353": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SUB",
      "path": "2"
    },
    "354": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "356": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "357": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "LT",
      "path": "2"
    },
    "358": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "359": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F"
    },
    "362": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "363": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "365": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "366": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "REVERT",
      "path": "2"
    },
    "367": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "offset": [
        503,
        544
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "op": "SUB"
    },
    "378": {
      "offset": [
        503,
        544
      ],
      "op": "AND",
      "path": "2"
    },
    "379": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x427"
    },
    "382": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        503,
        544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "383": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "384": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "386": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "387": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "388": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "389": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "390": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "391": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP3",
      "path": "2"
    },
    "392": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "393": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "394": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "395": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "396": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "397": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SUB",
      "path": "2"
    },
    "398": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "400": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "ADD",
      "path": "2"
    },
    "401": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "402": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "RETURN",
      "path": "2"
    },
    "403": {
      "offset": [
        242,
        271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "404": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        242,
        271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "407": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        242,
        271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43C"
    },
    "410": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        242,
        271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "411": {
      "offset": [
        277,
        309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "412": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        277,
        309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "415": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        277,
        309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x442"
    },
    "418": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        277,
        309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "419": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "420": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "423": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "425": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "DUP1",
      "path": "2"
    },
    "426": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "427": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "SUB",
      "path": "2"
    },
    "428": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "430": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "431": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "LT",
      "path": "2"
    },
    "432": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "433": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9"
    },
    "436": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "437": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "439": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "DUP1",
      "path": "2"
    },
    "440": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "REVERT",
      "path": "2"
    },
    "441": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "DUP1",
      "path": "2"
    },
    "444": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "445": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "446": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "448": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "ADD",
      "path": "2"
    },
    "449": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "450": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "453": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "i",
      "offset": [
        727,
        874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "454": {
      "fn": "SimpleChef.update",
      "offset": [
        880,
        1476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "SimpleChef.update",
      "offset": [
        880,
        1476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "458": {
      "fn": "SimpleChef.update",
      "offset": [
        880,
        1476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "461": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        880,
        1476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "462": {
      "offset": [
        206,
        236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "463": {
      "fn": "SimpleChef.update",
      "offset": [
        206,
        236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "466": {
      "fn": "SimpleChef.update",
      "offset": [
        206,
        236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BB"
    },
    "469": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        206,
        236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "470": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "471": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "474": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "476": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "477": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "478": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "SUB",
      "path": "2"
    },
    "479": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "481": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "DUP2",
      "path": "2"
    },
    "482": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "LT",
      "path": "2"
    },
    "483": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "484": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "487": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "488": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "490": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "491": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "REVERT",
      "path": "2"
    },
    "492": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "495": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C1"
    },
    "498": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMP",
      "path": "2"
    },
    "499": {
      "offset": [
        456,
        497
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "500": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F"
    },
    "503": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "505": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "DUP1",
      "path": "2"
    },
    "506": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "507": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "SUB",
      "path": "2"
    },
    "508": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "510": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "511": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "LT",
      "path": "2"
    },
    "512": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "513": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209"
    },
    "516": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "517": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "519": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "DUP1",
      "path": "2"
    },
    "520": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "REVERT",
      "path": "2"
    },
    "521": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "offset": [
        456,
        497
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "offset": [
        456,
        497
      ],
      "op": "AND",
      "path": "2"
    },
    "533": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x783"
    },
    "536": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        456,
        497
      ],
      "op": "JUMP",
      "path": "2"
    },
    "537": {
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "541": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x798"
    },
    "544": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        154,
        168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "545": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "546": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "548": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP1",
      "path": "2"
    },
    "549": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "559": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "560": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "AND",
      "path": "2"
    },
    "561": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP3",
      "path": "2"
    },
    "562": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "563": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "564": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "565": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "566": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "567": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SUB",
      "path": "2"
    },
    "568": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "570": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "ADD",
      "path": "2"
    },
    "571": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "572": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "RETURN",
      "path": "2"
    },
    "573": {
      "offset": [
        401,
        450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "574": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "577": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "579": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "580": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "581": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "SUB",
      "path": "2"
    },
    "582": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "584": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "585": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "LT",
      "path": "2"
    },
    "586": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "587": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "590": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "591": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "593": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "594": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "REVERT",
      "path": "2"
    },
    "595": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "offset": [
        401,
        450
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "offset": [
        401,
        450
      ],
      "op": "AND",
      "path": "2"
    },
    "607": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A7"
    },
    "610": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        401,
        450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "611": {
      "offset": [
        128,
        148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "612": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "615": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B9"
    },
    "618": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        128,
        148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "619": {
      "offset": [
        316,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "620": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "623": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "625": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "626": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "627": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SUB",
      "path": "2"
    },
    "628": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "630": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "631": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "LT",
      "path": "2"
    },
    "632": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "633": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "636": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "637": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "639": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "640": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "REVERT",
      "path": "2"
    },
    "641": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "offset": [
        316,
        340
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "644": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C8"
    },
    "647": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        316,
        340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "648": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "649": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2566,
        2576
      ],
      "op": "CALLER",
      "path": "2"
    },
    "650": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2529,
        2548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "652": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "653": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "654": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "655": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "657": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "659": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "660": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "662": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "663": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "664": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2551,
        2577
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "665": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2595,
        2617
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 0
    },
    "666": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2595,
        2617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "667": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2595,
        2617
      ],
      "op": "LT",
      "path": "2"
    },
    "668": {
      "branch": 31,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2595,
        2617
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "669": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D7"
    },
    "672": {
      "branch": 31,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "673": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "675": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP2",
      "path": "2"
    },
    "684": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "685": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "687": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "ADD",
      "path": "2"
    },
    "688": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "689": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "690": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "692": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "ADD",
      "path": "2"
    },
    "693": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP3",
      "path": "2"
    },
    "694": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP2",
      "path": "2"
    },
    "695": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SUB",
      "path": "2"
    },
    "696": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP3",
      "path": "2"
    },
    "697": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "698": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "700": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP2",
      "path": "2"
    },
    "701": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "702": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "704": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "ADD",
      "path": "2"
    },
    "705": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "706": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBDC"
    },
    "709": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "711": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "712": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "713": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "715": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "ADD",
      "path": "2"
    },
    "716": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "717": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "POP",
      "path": "2"
    },
    "718": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "POP",
      "path": "2"
    },
    "719": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "721": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "722": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "723": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "724": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SUB",
      "path": "2"
    },
    "725": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "726": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "REVERT",
      "path": "2"
    },
    "727": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2587,
        2657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "728": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2667,
        2675
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 1,
      "value": "0x2DF"
    },
    "731": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2667,
        2673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "734": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2667,
        2675
      ],
      "op": "JUMP",
      "path": "2"
    },
    "735": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2667,
        2675
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "736": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2780,
        2790
      ],
      "op": "CALLER",
      "path": "2"
    },
    "737": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2685,
        2700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "739": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "740": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "741": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "742": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2779
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "744": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "746": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "747": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "749": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "750": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "751": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "752": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2719,
        2736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "754": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2719,
        2736
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "755": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "758": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "759": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2765,
        2791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "760": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313"
    },
    "763": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "764": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2742,
        2746
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "770": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2742,
        2746
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "771": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "774": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "775": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2714
      ],
      "op": "DUP8",
      "path": "2"
    },
    "776": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "777": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "780": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2703,
        2737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "781": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "782": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "783": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x848"
    },
    "786": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2703,
        2747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "787": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "788": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "789": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "792": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2703,
        2801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "793": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2703,
        2801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "794": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2685,
        2801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2815,
        2826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "797": {
      "branch": 32,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2815,
        2826
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "798": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2811,
        2892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "801": {
      "branch": 32,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2811,
        2892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "802": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2842,
        2881
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 2,
      "value": "0x32B"
    },
    "805": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2861,
        2871
      ],
      "op": "CALLER",
      "path": "2"
    },
    "806": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2873,
        2880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "807": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2842,
        2860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CC"
    },
    "810": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2842,
        2881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "811": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2842,
        2881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "812": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2905,
        2916
      ],
      "op": "DUP3",
      "path": "2"
    },
    "813": {
      "branch": 33,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2905,
        2916
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "814": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2901,
        3095
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DC"
    },
    "817": {
      "branch": 33,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2901,
        3095
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "818": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2961,
        2985
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 3,
      "value": "0x33B"
    },
    "821": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2961,
        2972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "822": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2977,
        2984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "823": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2961,
        2976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "826": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2961,
        2985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "827": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2961,
        2985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "828": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2947,
        2957
      ],
      "op": "CALLER",
      "path": "2"
    },
    "829": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "831": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "832": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "833": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "834": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "836": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "838": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "839": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "840": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "841": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "843": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "844": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "DUP4",
      "path": "2"
    },
    "845": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2958
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "846": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2985
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "847": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "848": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2985
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "849": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "850": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3008
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0xA"
    },
    "852": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "853": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "854": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3020
      ],
      "op": "DUP4",
      "path": "2"
    },
    "855": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3020
      ],
      "op": "DUP3",
      "path": "2"
    },
    "856": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3020
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "857": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "861": {
      "op": "NOT"
    },
    "862": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3028
      ],
      "op": "AND",
      "path": "2"
    },
    "863": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "864": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2999,
        3028
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 5
    },
    "868": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP5",
      "path": "2"
    },
    "869": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "870": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "879": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "880": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "882": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "883": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ADD",
      "path": "2"
    },
    "884": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "885": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "886": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "887": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "888": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "890": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP5",
      "path": "2"
    },
    "891": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ADD",
      "path": "2"
    },
    "892": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP9",
      "path": "2"
    },
    "893": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "894": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "895": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "896": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "906": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "907": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "AND",
      "path": "2"
    },
    "908": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "909": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "914": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "915": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "917": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "918": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP3",
      "path": "2"
    },
    "919": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ADD",
      "path": "2"
    },
    "920": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "921": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "922": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP4",
      "path": "2"
    },
    "923": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "924": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SUB",
      "path": "2"
    },
    "925": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ADD",
      "path": "2"
    },
    "926": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "927": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP3",
      "path": "2"
    },
    "928": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "929": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3045
      ],
      "op": "DUP8",
      "path": "2"
    },
    "930": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "931": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "932": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "933": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "934": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "935": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "938": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "939": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "941": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "942": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "REVERT",
      "path": "2"
    },
    "943": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "945": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "GAS",
      "path": "2"
    },
    "946": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "CALL",
      "path": "2"
    },
    "947": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "948": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "949": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "950": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C3"
    },
    "953": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "954": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "955": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "957": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "958": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "959": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "960": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "962": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "REVERT",
      "path": "2"
    },
    "963": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "964": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "965": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "966": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "967": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "968": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "970": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "971": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "972": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "974": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "975": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "LT",
      "path": "2"
    },
    "976": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "977": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D9"
    },
    "980": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "981": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "983": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "984": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "REVERT",
      "path": "2"
    },
    "985": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3042,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2901,
        3095
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "989": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3199
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 6,
      "value": "0x3FA"
    },
    "992": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3185,
        3189
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "998": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "1001": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3149,
        3166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1003": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3149,
        3166
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1004": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3144
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1005": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "1008": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1009": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3167
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1010": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3167
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1011": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3167
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1016": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3167
      ],
      "op": "AND",
      "path": "2"
    },
    "1017": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        3133,
        3167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1018": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3133,
        3199
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1019": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3119,
        3129
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1020": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1022": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1023": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1024": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1025": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1027": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1029": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1030": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1032": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1033": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3130
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1034": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3104,
        3199
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        2477,
        3206
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1039": {
      "offset": [
        346,
        395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1040": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1042": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1044": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1045": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1047": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1048": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1049": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1050": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1052": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1053": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1054": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1055": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        346,
        395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1056": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        346,
        395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1057": {
      "offset": [
        175,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1058": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1060": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1061": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1062": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        175,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1063": {
      "offset": [
        503,
        544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1064": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1066": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1068": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1069": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1071": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1072": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1073": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1074": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1076": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1077": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1078": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1079": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1081": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "AND",
      "path": "2"
    },
    "1082": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        503,
        544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1083": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        503,
        544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1084": {
      "offset": [
        242,
        271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1085": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        242,
        271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1087": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        242,
        271
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1088": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        242,
        271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1089": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        242,
        271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1090": {
      "offset": [
        277,
        309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1091": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        277,
        309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1093": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        277,
        309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1094": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        277,
        309
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1095": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        277,
        309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1096": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1097": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        823,
        830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1099": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        853,
        867
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x454"
    },
    "1102": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        853,
        856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1103": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        861,
        866
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1104": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        853,
        860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "1107": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "i",
      "offset": [
        853,
        867
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1108": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        853,
        867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1109": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        846,
        867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1110": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        846,
        867
      ],
      "op": "POP",
      "path": "2"
    },
    "1111": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1112": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1113": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1114": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "POP",
      "path": "2"
    },
    "1115": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        727,
        874
      ],
      "op": "POP",
      "path": "2"
    },
    "1116": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "o",
      "offset": [
        727,
        874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "SimpleChef.update",
      "offset": [
        880,
        1476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "SimpleChef.update",
      "offset": [
        935,
        950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1120": {
      "fn": "SimpleChef.update",
      "offset": [
        935,
        950
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1121": {
      "fn": "SimpleChef.update",
      "offset": [
        919,
        931
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "1122": {
      "branch": 34,
      "fn": "SimpleChef.update",
      "offset": [
        919,
        950
      ],
      "op": "GT",
      "path": "2"
    },
    "1123": {
      "fn": "SimpleChef.update",
      "offset": [
        915,
        983
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46B"
    },
    "1126": {
      "branch": 34,
      "fn": "SimpleChef.update",
      "offset": [
        915,
        983
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1127": {
      "fn": "SimpleChef.update",
      "offset": [
        966,
        973
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x5B9"
    },
    "1130": {
      "fn": "SimpleChef.update",
      "offset": [
        966,
        973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1131": {
      "fn": "SimpleChef.update",
      "offset": [
        915,
        983
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1132": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1134": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1016
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1135": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1137": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1138": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1139": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1148": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1149": {
      "fn": "SimpleChef.update",
      "offset": [
        1035,
        1039
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1150": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1152": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1153": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ADD",
      "path": "2"
    },
    "1154": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1155": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1156": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1157": {
      "fn": "SimpleChef.update",
      "offset": [
        992,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1159": {
      "fn": "SimpleChef.update",
      "offset": [
        992,
        1010
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1016
      ],
      "op": "AND",
      "path": "2"
    },
    "1169": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1016
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1170": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1026
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1175": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1026
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1176": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1178": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1179": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1180": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ADD",
      "path": "2"
    },
    "1181": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1182": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1184": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1185": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1186": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1187": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1188": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1189": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SUB",
      "path": "2"
    },
    "1190": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ADD",
      "path": "2"
    },
    "1191": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1192": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1016
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1193": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1194": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1195": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1196": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1197": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1198": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B6"
    },
    "1201": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1202": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1204": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1205": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1206": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1207": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "POP",
      "path": "2"
    },
    "1208": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "GAS",
      "path": "2"
    },
    "1209": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1210": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1211": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1212": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1213": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CA"
    },
    "1216": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1217": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1218": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1220": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1221": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1222": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1223": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1225": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1226": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1227": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "POP",
      "path": "2"
    },
    "1228": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "POP",
      "path": "2"
    },
    "1229": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "POP",
      "path": "2"
    },
    "1230": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "POP",
      "path": "2"
    },
    "1231": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1233": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1234": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1235": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1237": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1238": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "LT",
      "path": "2"
    },
    "1239": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1240": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E0"
    },
    "1243": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1244": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1246": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1247": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1248": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1251": {
      "fn": "SimpleChef.update",
      "offset": [
        1013,
        1041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "branch": 35,
      "fn": "SimpleChef.update",
      "offset": [
        1055,
        1070
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1254": {
      "fn": "SimpleChef.update",
      "offset": [
        1051,
        1147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F3"
    },
    "1257": {
      "branch": 35,
      "fn": "SimpleChef.update",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "SimpleChef.update",
      "offset": [
        1104,
        1116
      ],
      "op": "NUMBER",
      "path": "2",
      "statement": 9
    },
    "1260": {
      "fn": "SimpleChef.update",
      "offset": [
        1086,
        1101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1262": {
      "fn": "SimpleChef.update",
      "offset": [
        1086,
        1116
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1263": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1137
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x5B9"
    },
    "1266": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1137
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1267": {
      "fn": "SimpleChef.update",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1268": {
      "fn": "SimpleChef.update",
      "offset": [
        1156,
        1174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1270": {
      "fn": "SimpleChef.update",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x501"
    },
    "1273": {
      "fn": "SimpleChef.update",
      "offset": [
        1191,
        1206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1275": {
      "fn": "SimpleChef.update",
      "offset": [
        1191,
        1206
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1276": {
      "fn": "SimpleChef.update",
      "offset": [
        1208,
        1220
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "1277": {
      "fn": "SimpleChef.update",
      "offset": [
        1177,
        1190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "1280": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1177,
        1221
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1281": {
      "fn": "SimpleChef.update",
      "offset": [
        1177,
        1221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1282": {
      "fn": "SimpleChef.update",
      "offset": [
        1156,
        1221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1283": {
      "fn": "SimpleChef.update",
      "offset": [
        1156,
        1221
      ],
      "op": "POP",
      "path": "2"
    },
    "1284": {
      "fn": "SimpleChef.update",
      "offset": [
        1231,
        1245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1286": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51A"
    },
    "1289": {
      "fn": "SimpleChef.update",
      "offset": [
        1263,
        1277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1291": {
      "fn": "SimpleChef.update",
      "offset": [
        1263,
        1277
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1292": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1258
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1293": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "1296": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1297": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1298": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1299": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1304": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "AND",
      "path": "2"
    },
    "1305": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1248,
        1278
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1306": {
      "fn": "SimpleChef.update",
      "offset": [
        1248,
        1278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1307": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x0"
    },
    "1309": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1310": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1311": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1313": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1314": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1315": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1324": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1325": {
      "fn": "SimpleChef.update",
      "offset": [
        1308,
        1312
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1326": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1328": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1329": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1330": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1331": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1333": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1334": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1335": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1336": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1337": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1338": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1339": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1340": {
      "fn": "SimpleChef.update",
      "offset": [
        1231,
        1278
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1341": {
      "fn": "SimpleChef.update",
      "offset": [
        1231,
        1278
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1342": {
      "op": "POP"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "op": "SUB"
    },
    "1351": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1352": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1353": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "AND",
      "path": "2"
    },
    "1354": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1355": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1299
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "1360": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1299
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1361": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1363": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1364": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1365": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1366": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1367": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1368": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1369": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1370": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1371": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1372": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "SUB",
      "path": "2"
    },
    "1373": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1374": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1375": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1376": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1294
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1377": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1378": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1379": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1380": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1381": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1382": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56E"
    },
    "1385": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1386": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1388": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1389": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1390": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1391": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "POP",
      "path": "2"
    },
    "1392": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "GAS",
      "path": "2"
    },
    "1393": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "CALL",
      "path": "2"
    },
    "1394": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1395": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1396": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1397": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x582"
    },
    "1400": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1401": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1402": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1404": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1405": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1406": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1407": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1409": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1410": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1411": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "POP",
      "path": "2"
    },
    "1412": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "POP",
      "path": "2"
    },
    "1413": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "POP",
      "path": "2"
    },
    "1414": {
      "fn": "SimpleChef.update",
      "offset": [
        1288,
        1322
      ],
      "op": "POP",
      "path": "2"
    },
    "1415": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1429
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x5AE"
    },
    "1418": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A5"
    },
    "1421": {
      "fn": "SimpleChef.update",
      "offset": [
        1408,
        1418
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1422": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "1425": {
      "fn": "SimpleChef.update",
      "offset": [
        1398,
        1402
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1431": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1393
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1432": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "1435": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1436": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1403
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1437": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1438": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1403
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1443": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1403
      ],
      "op": "AND",
      "path": "2"
    },
    "1444": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1387,
        1403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1445": {
      "fn": "SimpleChef.update",
      "offset": [
        1387,
        1419
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1446": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1448": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1369
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1449": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1450": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA64"
    },
    "1453": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1352,
        1429
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1454": {
      "fn": "SimpleChef.update",
      "offset": [
        1352,
        1429
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1455": {
      "fn": "SimpleChef.update",
      "offset": [
        1332,
        1349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1457": {
      "fn": "SimpleChef.update",
      "offset": [
        1332,
        1429
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "SimpleChef.update",
      "offset": [
        1457,
        1469
      ],
      "op": "NUMBER",
      "path": "2",
      "statement": 13
    },
    "1461": {
      "fn": "SimpleChef.update",
      "offset": [
        1439,
        1454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1463": {
      "fn": "SimpleChef.update",
      "offset": [
        1439,
        1469
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "fn": "SimpleChef.update",
      "offset": [
        880,
        1476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1466": {
      "fn": "SimpleChef.update",
      "jump": "o",
      "offset": [
        880,
        1476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1467": {
      "offset": [
        206,
        236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1468": {
      "fn": "SimpleChef.update",
      "offset": [
        206,
        236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1470": {
      "fn": "SimpleChef.update",
      "offset": [
        206,
        236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1471": {
      "fn": "SimpleChef.update",
      "offset": [
        206,
        236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1472": {
      "fn": "SimpleChef.update",
      "jump": "o",
      "offset": [
        206,
        236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1473": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1474": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1533,
        1541
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x5C9"
    },
    "1477": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1533,
        1539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "1480": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1533,
        1541
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1481": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1533,
        1541
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1482": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1588,
        1598
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1483": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1551,
        1570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1485": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1486": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1487": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1488": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1490": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1492": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1493": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1495": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1496": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1497": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1573,
        1599
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1498": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1613,
        1628
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1499": {
      "branch": 36,
      "fn": "SimpleChef.deposit",
      "offset": [
        1613,
        1628
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1500": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1609,
        1881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x621"
    },
    "1503": {
      "branch": 36,
      "fn": "SimpleChef.deposit",
      "offset": [
        1609,
        1881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1743,
        1753
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1505": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1644,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1507": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1508": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1509": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1510": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1512": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1514": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1515": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1517": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1518": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1519": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1520": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1678,
        1695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1522": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1678,
        1695
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1523": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60D"
    },
    "1526": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1768
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1527": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1728,
        1754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1528": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313"
    },
    "1531": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1532": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1701,
        1705
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1538": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1701,
        1705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1539": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "1542": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1543": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1673
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1544": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1545": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "1548": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1662,
        1696
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1549": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1662,
        1768
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1550": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1644,
        1768
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1786,
        1797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1553": {
      "branch": 37,
      "fn": "SimpleChef.deposit",
      "offset": [
        1786,
        1797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1554": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1782,
        1871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61F"
    },
    "1557": {
      "branch": 37,
      "fn": "SimpleChef.deposit",
      "offset": [
        1782,
        1871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1558": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1817,
        1856
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x61F"
    },
    "1561": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1836,
        1846
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1562": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1848,
        1855
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1563": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1817,
        1835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CC"
    },
    "1566": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1817,
        1856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1567": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1817,
        1856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1568": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1609,
        1881
      ],
      "op": "POP",
      "path": "2"
    },
    "1569": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1609,
        1881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1570": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1894,
        1905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1571": {
      "branch": 38,
      "fn": "SimpleChef.deposit",
      "offset": [
        1894,
        1905
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1572": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1890,
        2360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x751"
    },
    "1575": {
      "branch": 38,
      "fn": "SimpleChef.deposit",
      "offset": [
        1890,
        2360
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1576": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "1578": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1579": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1581": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1582": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1583": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1592": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1593": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1946,
        1956
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1594": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1596": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1597": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ADD",
      "path": "2"
    },
    "1598": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1599": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1967,
        1971
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1600": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1602": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1603": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ADD",
      "path": "2"
    },
    "1604": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1605": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1607": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1608": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ADD",
      "path": "2"
    },
    "1609": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1610": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1611": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1612": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1613": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1623": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1624": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "AND",
      "path": "2"
    },
    "1625": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1626": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1937
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "1631": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1632": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1634": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1635": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1636": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ADD",
      "path": "2"
    },
    "1637": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1638": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1640": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1641": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1642": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1643": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1644": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1645": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1646": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "SUB",
      "path": "2"
    },
    "1647": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ADD",
      "path": "2"
    },
    "1648": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1649": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1651": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1924
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1652": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1653": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1654": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1655": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1656": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1657": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x681"
    },
    "1660": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1661": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1663": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1664": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1665": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1666": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "POP",
      "path": "2"
    },
    "1667": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "GAS",
      "path": "2"
    },
    "1668": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "CALL",
      "path": "2"
    },
    "1669": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1670": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1671": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1672": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x695"
    },
    "1675": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1676": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1677": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1679": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1680": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1681": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1682": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1684": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1685": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1686": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "POP",
      "path": "2"
    },
    "1687": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "POP",
      "path": "2"
    },
    "1688": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "POP",
      "path": "2"
    },
    "1689": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "POP",
      "path": "2"
    },
    "1690": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1692": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1693": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1694": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1696": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1697": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "LT",
      "path": "2"
    },
    "1698": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1699": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AB"
    },
    "1702": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1703": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1705": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1706": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1707": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1921,
        1982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2025,
        2049
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 17,
      "value": "0x6B8"
    },
    "1712": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2025,
        2049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2025,
        2036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1715": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2041,
        2048
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1716": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2025,
        2040
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA64"
    },
    "1719": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        2025,
        2049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1720": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2025,
        2049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1721": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2011,
        2021
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1722": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1724": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1725": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1726": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1727": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1729": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1731": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1732": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1733": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1734": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1736": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1737": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1738": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2022
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1739": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2049
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1740": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1741": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2049
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1742": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1996,
        2049
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1743": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1745": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1746": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1747": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1748": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1749": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1751": {
      "branch": 39,
      "fn": "SimpleChef.deposit",
      "offset": [
        2148,
        2169
      ],
      "op": "AND",
      "path": "2"
    },
    "1752": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2143,
        2228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71E"
    },
    "1755": {
      "branch": 39,
      "fn": "SimpleChef.deposit",
      "offset": [
        2143,
        2228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1756": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x6"
    },
    "1758": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1759": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1760": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1762": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1763": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "ADD",
      "path": "2"
    },
    "1764": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1765": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1768": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1769": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1770": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1771": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1772": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1805": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "ADD",
      "path": "2"
    },
    "1806": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1807": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "SUB"
    },
    "1816": {
      "op": "NOT"
    },
    "1817": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "AND",
      "path": "2"
    },
    "1818": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2202,
        2212
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1819": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "OR",
      "path": "2"
    },
    "1820": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1821": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2189,
        2213
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1822": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2143,
        2228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1823": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2289,
        2299
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 19
    },
    "1824": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1826": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1827": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1828": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1829": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1831": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1833": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1834": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1835": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1836": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1838": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1839": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1840": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2300
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1841": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1842": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1843": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2303,
        2307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1847": {
      "op": "NOT"
    },
    "1848": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1849": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1850": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "AND",
      "path": "2"
    },
    "1851": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1852": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "OR",
      "path": "2"
    },
    "1853": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1854": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1855": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2279,
        2307
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1856": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2330
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x9"
    },
    "1858": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1859": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2342
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1860": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2342
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1861": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2342
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1862": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2342
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1863": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1864": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1865": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1866": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1867": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "AND",
      "path": "2"
    },
    "1868": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1869": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1870": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "OR",
      "path": "2"
    },
    "1871": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1872": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2321,
        2349
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1873": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1890,
        2360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1874": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2464
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x76F"
    },
    "1877": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2450,
        2454
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1883": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2432
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D"
    },
    "1886": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2414,
        2431
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1888": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2414,
        2431
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1889": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2409
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1890": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "1893": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1894": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2432
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1895": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1896": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2432
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1901": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2432
      ],
      "op": "AND",
      "path": "2"
    },
    "1902": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        2398,
        2432
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1903": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2398,
        2464
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1904": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2384,
        2394
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1905": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1907": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1908": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1909": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1910": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1912": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1914": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1915": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1917": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1918": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1919": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2369,
        2464
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        1482,
        2471
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1923": {
      "offset": [
        456,
        497
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1924": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1926": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1928": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1929": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1931": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1932": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1933": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1934": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1936": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1937": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1938": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1939": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1941": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "AND",
      "path": "2"
    },
    "1942": {
      "fn": "SimpleChef.deposit",
      "offset": [
        456,
        497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1943": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        456,
        497
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1944": {
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1945": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1947": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "SHL"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "offset": [
        154,
        168
      ],
      "op": "AND",
      "path": "2"
    },
    "1957": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1958": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        154,
        168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1959": {
      "offset": [
        401,
        450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1960": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1962": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1964": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1965": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1967": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1968": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1969": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1970": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1972": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1973": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1974": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1975": {
      "fn": "SimpleChef.deposit",
      "offset": [
        401,
        450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1976": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        401,
        450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1977": {
      "offset": [
        128,
        148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1978": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1980": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "offset": [
        128,
        148
      ],
      "op": "AND",
      "path": "2"
    },
    "1990": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1991": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        128,
        148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1992": {
      "offset": [
        316,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1993": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1995": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1996": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1997": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1998": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1999": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "LT",
      "path": "2"
    },
    "2000": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D5"
    },
    "2003": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2004": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "INVALID",
      "path": "2"
    },
    "2005": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2006": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2008": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2009": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2010": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2011": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2013": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2014": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2015": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2016": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "2017": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "offset": [
        316,
        340
      ],
      "op": "AND",
      "path": "2"
    },
    "2027": {
      "fn": "SimpleChef.deposit",
      "offset": [
        316,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "offset": [
        316,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2030": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        316,
        340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2031": {
      "fn": "SafeMath.mul",
      "offset": [
        2147,
        2606
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2032": {
      "fn": "SafeMath.mul",
      "offset": [
        2205,
        2212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2034": {
      "branch": 41,
      "fn": "SafeMath.mul",
      "offset": [
        2446,
        2452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2035": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FE"
    },
    "2038": {
      "branch": 41,
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2476
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x0"
    },
    "2042": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x457"
    },
    "2045": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2046": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2047": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2048": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2049": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "MUL",
      "path": "1"
    },
    "2050": {
      "fn": "SafeMath.mul",
      "offset": [
        2513,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2051": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2052": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2053": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2054": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0x80B"
    },
    "2057": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2058": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2059": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2060": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "DIV",
      "path": "1"
    },
    "2061": {
      "branch": 42,
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2542
      ],
      "op": "EQ",
      "path": "1"
    },
    "2062": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x454"
    },
    "2065": {
      "branch": 42,
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2066": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2068": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2077": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2078": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2080": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2081": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2082": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2083": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2085": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2086": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2087": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2088": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "1"
    },
    "2089": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2090": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2091": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2093": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2094": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2095": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2097": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2098": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2099": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBBB"
    },
    "2102": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2104": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2105": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2106": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2108": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2109": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2110": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "2111": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "2112": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2114": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2115": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2116": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2117": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "1"
    },
    "2118": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2119": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2120": {
      "fn": "SafeMath.div",
      "offset": [
        3068,
        3198
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2121": {
      "fn": "SafeMath.div",
      "offset": [
        3126,
        3133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2123": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x454"
    },
    "2126": {
      "fn": "SafeMath.div",
      "offset": [
        3156,
        3157
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2127": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3160
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2128": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2130": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2131": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2132": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2134": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "1"
    },
    "2135": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2137": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2138": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2139": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "2141": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2142": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2143": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2145": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "1"
    },
    "2146": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "2179": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2180": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2181": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "POP",
      "path": "1"
    },
    "2182": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABE"
    },
    "2185": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3152,
        3191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2186": {
      "fn": "SafeMath.sub",
      "offset": [
        1288,
        1422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2187": {
      "fn": "SafeMath.sub",
      "offset": [
        1346,
        1353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2189": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x454"
    },
    "2192": {
      "fn": "SafeMath.sub",
      "offset": [
        1376,
        1377
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2193": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1380
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2194": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2196": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2197": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2198": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2200": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "1"
    },
    "2201": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2203": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2204": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2205": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "2207": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2208": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2209": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2211": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "1"
    },
    "2212": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2245": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2246": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2247": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "POP",
      "path": "1"
    },
    "2248": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB60"
    },
    "2251": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1372,
        1415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2252": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3321,
        3606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2253": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3398,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2255": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2256": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2257": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2259": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2260": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2261": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2270": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2271": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3443,
        3447
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2272": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2274": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2275": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ADD",
      "path": "2"
    },
    "2276": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2277": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2278": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2288": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2289": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "AND",
      "path": "2"
    },
    "2290": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2291": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3434
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2296": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2297": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2299": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2300": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2301": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ADD",
      "path": "2"
    },
    "2302": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2303": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2305": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2306": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2307": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2308": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2309": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2310": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2311": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SUB",
      "path": "2"
    },
    "2312": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ADD",
      "path": "2"
    },
    "2313": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2314": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3424
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2315": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2316": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2317": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2318": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2319": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2320": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x918"
    },
    "2323": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2324": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2326": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2327": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2328": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2329": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "POP",
      "path": "2"
    },
    "2330": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "GAS",
      "path": "2"
    },
    "2331": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2332": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2333": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2334": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2335": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92C"
    },
    "2338": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2339": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2340": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2342": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2343": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2344": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2345": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2347": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2348": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2349": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "POP",
      "path": "2"
    },
    "2350": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "POP",
      "path": "2"
    },
    "2351": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "POP",
      "path": "2"
    },
    "2352": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "POP",
      "path": "2"
    },
    "2353": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2355": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2356": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2357": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2359": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2360": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "LT",
      "path": "2"
    },
    "2361": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2362": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x942"
    },
    "2365": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2366": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2368": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2369": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2370": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2373": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3418,
        3449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3463,
        3482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2376": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3463,
        3482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2377": {
      "branch": 40,
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3463,
        3482
      ],
      "op": "GT",
      "path": "2"
    },
    "2378": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2379": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D9"
    },
    "2382": {
      "branch": 40,
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2383": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x0"
    },
    "2385": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2386": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2387": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2389": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2390": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2391": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2400": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2410": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2411": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "AND",
      "path": "2"
    },
    "2412": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2414": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2415": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "2416": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2417": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2419": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2420": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "2421": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2422": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2423": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2424": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2425": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2426": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2427": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2429": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "AND",
      "path": "2"
    },
    "2430": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2431": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3513
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2436": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3513
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2437": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2439": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2440": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2441": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "2442": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2443": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2445": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2446": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2447": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2448": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2449": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2450": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SUB",
      "path": "2"
    },
    "2451": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2452": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2453": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ADD",
      "path": "2"
    },
    "2454": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2455": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2456": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2457": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3504
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2458": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2459": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2460": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2461": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2462": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2463": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "2466": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2467": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2469": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2470": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2471": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2472": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "2473": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "GAS",
      "path": "2"
    },
    "2474": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "CALL",
      "path": "2"
    },
    "2475": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2476": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2477": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2478": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BB"
    },
    "2481": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2482": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2483": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2485": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2486": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2487": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2488": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2490": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2491": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2492": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "2493": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "2494": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "2495": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "POP",
      "path": "2"
    },
    "2496": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2498": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2499": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2500": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2502": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2503": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "LT",
      "path": "2"
    },
    "2504": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2505": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D1"
    },
    "2508": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2509": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2511": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2512": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2513": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3498,
        3529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5F"
    },
    "2518": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2521": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2522": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x0"
    },
    "2524": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2525": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2526": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2528": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2529": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2530": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2539": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2549": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2550": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "AND",
      "path": "2"
    },
    "2551": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2553": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2554": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ADD",
      "path": "2"
    },
    "2555": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2556": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2558": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2559": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ADD",
      "path": "2"
    },
    "2560": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2561": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2562": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2563": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2564": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2565": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2566": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2567": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2568": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "AND",
      "path": "2"
    },
    "2569": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2570": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3575
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2575": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2576": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2578": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2579": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2580": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ADD",
      "path": "2"
    },
    "2581": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2582": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2584": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2585": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2586": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2587": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2588": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2589": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SUB",
      "path": "2"
    },
    "2590": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2591": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2592": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ADD",
      "path": "2"
    },
    "2593": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2594": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2595": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2596": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3566
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2597": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2598": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2599": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2600": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2601": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2602": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA32"
    },
    "2605": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2606": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2608": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2609": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2610": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2611": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "POP",
      "path": "2"
    },
    "2612": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "GAS",
      "path": "2"
    },
    "2613": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "CALL",
      "path": "2"
    },
    "2614": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2615": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2616": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2617": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA46"
    },
    "2620": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2621": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2622": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2624": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2625": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2626": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2627": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2629": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2630": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2631": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "POP",
      "path": "2"
    },
    "2632": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "POP",
      "path": "2"
    },
    "2633": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "POP",
      "path": "2"
    },
    "2634": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "POP",
      "path": "2"
    },
    "2635": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2637": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2638": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2639": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2641": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2642": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "LT",
      "path": "2"
    },
    "2643": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2644": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5C"
    },
    "2647": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2648": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2650": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2651": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2652": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2653": {
      "op": "POP"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3459,
        3600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2656": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3321,
        3606
      ],
      "op": "POP",
      "path": "2"
    },
    "2657": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3321,
        3606
      ],
      "op": "POP",
      "path": "2"
    },
    "2658": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3321,
        3606
      ],
      "op": "POP",
      "path": "2"
    },
    "2659": {
      "fn": "SimpleChef.safePotatoTransfer",
      "jump": "o",
      "offset": [
        3321,
        3606
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2661": {
      "fn": "SafeMath.add",
      "offset": [
        899,
        906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2663": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2664": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2665": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2666": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 28
    },
    "2667": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2668": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "LT",
      "path": "1"
    },
    "2669": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2670": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x454"
    },
    "2673": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2674": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2676": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2677": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2686": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2687": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2689": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2691": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2692": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2693": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2694": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "2696": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2698": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2699": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2700": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2701": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2734": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2736": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2737": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2738": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2739": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2740": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2741": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2742": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2743": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2744": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SUB",
      "path": "1"
    },
    "2745": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2747": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2748": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2749": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2750": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2751": {
      "fn": "SafeMath.div",
      "offset": [
        3766,
        3773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2753": {
      "fn": "SafeMath.div",
      "offset": [
        3800,
        3812
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 29
    },
    "2754": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        3793,
        3798
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2755": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4A"
    },
    "2758": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2759": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2761": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2770": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2771": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2773": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2774": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2775": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2776": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2778": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2779": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2780": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2781": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2782": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2783": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2784": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2785": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2786": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2787": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2788": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2789": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2790": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2792": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2793": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2794": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2795": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2796": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2797": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2798": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2800": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2801": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2802": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2803": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2804": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2805": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2807": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2808": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2809": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2810": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "LT",
      "path": "1"
    },
    "2811": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2812": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0F"
    },
    "2815": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2816": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2817": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2818": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2819": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2820": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2821": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2822": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2823": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2824": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2826": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2827": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAF7"
    },
    "2830": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2831": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2832": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2833": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2834": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2835": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2836": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2837": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2838": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2839": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2840": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2841": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2842": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2844": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "1"
    },
    "2845": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2846": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2847": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3C"
    },
    "2850": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2851": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2852": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2853": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2854": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2855": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2856": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2858": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2859": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2861": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2862": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2865": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "EXP",
      "path": "1"
    },
    "2866": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2867": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "NOT",
      "path": "1"
    },
    "2868": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "1"
    },
    "2869": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2870": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2871": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2873": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2874": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2875": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2876": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2877": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2878": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2879": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2880": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2881": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2882": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2884": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2885": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2886": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2887": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2888": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2889": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2890": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2891": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2892": {
      "fn": "SafeMath.div",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2894": {
      "fn": "SafeMath.div",
      "offset": [
        3839,
        3840
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2895": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3836
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2896": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2897": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB56"
    },
    "2900": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2901": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2902": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2903": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DIV",
      "path": "1"
    },
    "2904": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2905": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2912": {
      "fn": "SafeMath.sub",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2913": {
      "fn": "SafeMath.sub",
      "offset": [
        1799,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2915": {
      "fn": "SafeMath.sub",
      "offset": [
        1834,
        1846
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 30
    },
    "2916": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2917": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2918": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "GT",
      "path": "1"
    },
    "2919": {
      "branch": 45,
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2920": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB2"
    },
    "2923": {
      "branch": 45,
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2924": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2926": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2933": {
      "op": "SHL"
    },
    "2934": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2935": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2936": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2938": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2940": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2941": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2942": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2943": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2944": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2945": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2946": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2947": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2949": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2950": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2951": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2952": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2953": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2954": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2955": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2956": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2957": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2958": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2960": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2961": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2962": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2963": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2964": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2965": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2966": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2967": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2968": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2969": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2970": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2971": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2973": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2974": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2975": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0F"
    },
    "2978": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2979": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2980": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2981": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2982": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2983": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2984": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2985": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2986": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2987": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2989": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2990": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAF7"
    },
    "2993": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2994": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2999": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SUB",
      "path": "1"
    },
    "3000": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3001": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "301b3fe6a01a67d0f390ea25957754938fa6a7f9",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./Potato.sol\";\nimport \"./Usd.sol\";\n\ncontract SimpleChef {\n    using SafeMath for uint256;\n\n    Potato public potato;\n    Usd public usd;\n\n    uint256 public startBlock;\n    uint256 public lastRewardBlock;\n    uint256 public potatoPerBlock;\n    uint256 public accPotatoPerShare;\n\n    address[] public stakers;\n    mapping(address => uint256) public stakingBalance;\n    mapping(address => uint256) public UserRewardDept;\n    mapping(address => bool) public hasStaked;\n    mapping(address => bool) public isStaking;\n\n    constructor(Potato _potato) public {\n        potato = _potato;\n        startBlock = block.number;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        public\n        view\n        returns (uint256)\n    {\n        return _to.sub(_from);\n    }\n\n    function update() public {\n        if (block.number <= lastRewardBlock) {\n            return;\n        }\n        uint256 usdBalance = usd.balanceOf(address(this));\n        if (usdBalance == 0) {\n            lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\n        uint256 reward = multiplier.mul(potatoPerBlock);\n        potato.mint(address(this), reward);\n        accPotatoPerShare = accPotatoPerShare.add(\n            reward.mul(1e12).div(usdBalance)\n        );\n        lastRewardBlock = block.number;\n    }\n\n    function deposit(uint256 _amount) public {\n        update();\n        uint256 userBalance = stakingBalance[msg.sender];\n        if (userBalance > 0) {\n            uint256 pending = userBalance.mul(accPotatoPerShare).div(1e12).sub(\n                UserRewardDept[msg.sender]\n            );\n            if (pending > 0) {\n                safePotatoTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            usd.transferFrom(address(msg.sender), address(this), _amount);\n            stakingBalance[msg.sender] = userBalance.add(_amount);\n\n            // Add user to stakers array *only* if they haven't staked already\n            if (!hasStaked[msg.sender]) {\n                stakers.push(msg.sender);\n            }\n\n            // Update staking status\n            isStaking[msg.sender] = true;\n            hasStaked[msg.sender] = true;\n        }\n        UserRewardDept[msg.sender] = userBalance.mul(accPotatoPerShare).div(\n            1e12\n        );\n    }\n\n    function withdraw(uint256 _amount) public {\n        uint256 userBalance = stakingBalance[msg.sender];\n        require(userBalance >= _amount, \"withdraw: not enough staked balance\");\n        update();\n        uint256 pending = userBalance.mul(accPotatoPerShare).div(1e12).sub(\n            UserRewardDept[msg.sender]\n        );\n        if (pending > 0) {\n            safePotatoTransfer(msg.sender, pending);\n        }\n        if (_amount > 0) {\n            stakingBalance[msg.sender] = userBalance.sub(_amount);\n            isStaking[msg.sender] = false;\n            usd.transfer(address(msg.sender), _amount);\n        }\n        UserRewardDept[msg.sender] = userBalance.mul(accPotatoPerShare).div(\n            1e12\n        );\n    }\n\n    // Safe potato transfer function, just in case if rounding error causes pool to not have enough potatos.\n    function safePotatoTransfer(address _to, uint256 _amount) internal {\n        uint256 potatoBal = potato.balanceOf(address(this));\n        if (_amount > potatoBal) {\n            potato.transfer(_to, potatoBal);\n        } else {\n            potato.transfer(_to, _amount);\n        }\n    }\n}\n",
  "sourceMap": "69:3539:2:-:0;;;551:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:103:2;596:6;:16;;-1:-1:-1;;;;;596:16:2;;;-1:-1:-1;;;;;;596:16:2;;;;;;;;;635:12;622:10;:25;69:3539;;;;;;",
  "sourcePath": "contracts/SimpleChef.sol",
  "type": "contract"
}