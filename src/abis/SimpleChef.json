{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Potato",
          "name": "_potato",
          "type": "address"
        },
        {
          "internalType": "contract Usd",
          "name": "_usd",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserRewardDept",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accPotatoPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potato",
      "outputs": [
        {
          "internalType": "contract Potato",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potatoPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "updatePotatoPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usd",
      "outputs": [
        {
          "internalType": "contract Usd",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Potato.sol",
    "1": "contracts/SafeMath.sol",
    "2": "contracts/SimpleChef.sol",
    "3": "contracts/Usd.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleChef.sol",
    "exportedSymbols": {
      "SimpleChef": [
        431
      ]
    },
    "id": 432,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/Potato.sol",
        "file": "./Potato.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 432,
        "sourceUnit": 1083,
        "src": "25:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Usd.sol",
        "file": "./Usd.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 432,
        "sourceUnit": 741,
        "src": "48:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 431,
        "linearizedBaseContracts": [
          431
        ],
        "name": "SimpleChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "contractScope": null,
              "id": 4,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1278,
              "src": "101:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1278",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "95:27:2",
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "114:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "f8dcc9a9",
            "id": 8,
            "mutability": "mutable",
            "name": "potato",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "128:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Potato_$1082",
              "typeString": "contract Potato"
            },
            "typeName": {
              "contractScope": null,
              "id": 7,
              "name": "Potato",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1082,
              "src": "128:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Potato_$1082",
                "typeString": "contract Potato"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d63a6ccd",
            "id": 10,
            "mutability": "mutable",
            "name": "usd",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "154:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Usd_$740",
              "typeString": "contract Usd"
            },
            "typeName": {
              "contractScope": null,
              "id": 9,
              "name": "Usd",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 740,
              "src": "154:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Usd_$740",
                "typeString": "contract Usd"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 12,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "175:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f8d181",
            "id": 14,
            "mutability": "mutable",
            "name": "lastRewardBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "206:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "206:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f64038c",
            "id": 16,
            "mutability": "mutable",
            "name": "potatoPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "242:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "242:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d920cb8",
            "id": 18,
            "mutability": "mutable",
            "name": "accPotatoPerShare",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "277:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 20,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "315:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "315:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 23,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "342:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "342:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 22,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "342:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 27,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "372:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "372:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "391:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2066395",
            "id": 31,
            "mutability": "mutable",
            "name": "UserRewardDept",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "427:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "435:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "427:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 35,
            "mutability": "mutable",
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "482:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "490:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "482:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 33,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "501:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 39,
            "mutability": "mutable",
            "name": "isStaking",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 431,
            "src": "529:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 37,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "548:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "622:147:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "potato",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "632:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Potato_$1082",
                        "typeString": "contract Potato"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "_potato",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "641:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Potato_$1082",
                        "typeString": "contract Potato"
                      }
                    },
                    "src": "632:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Potato_$1082",
                      "typeString": "contract Potato"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "632:16:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "usd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "658:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Usd_$740",
                        "typeString": "contract Usd"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "_usd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "664:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Usd_$740",
                        "typeString": "contract Usd"
                      }
                    },
                    "src": "658:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Usd_$740",
                      "typeString": "contract Usd"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "658:10:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "678:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "691:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "691:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "678:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "678:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 59,
                      "name": "potatoPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "713:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "730:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "713:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "713:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "744:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "752:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "752:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "744:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "744:18:2"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_potato",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "589:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Potato_$1082",
                    "typeString": "contract Potato"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40,
                    "name": "Potato",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1082,
                    "src": "589:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Potato_$1082",
                      "typeString": "contract Potato"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_usd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "605:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Usd_$740",
                    "typeString": "contract Usd"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 42,
                    "name": "Usd",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 740,
                    "src": "605:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Usd_$740",
                      "typeString": "contract Usd"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:26:2"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:0:2"
            },
            "scope": 431,
            "src": "577:192:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "951:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "976:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "968:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "968:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 77,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "961:21:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 84,
                  "src": "865:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 84,
                  "src": "880:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "864:28:2"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 84,
                  "src": "938:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "937:9:2"
            },
            "scope": 431,
            "src": "842:147:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1022:571:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1036:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1036:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1052:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1036:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 93,
                  "nodeType": "IfStatement",
                  "src": "1032:68:2",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1069:31:2",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 86,
                        "id": 91,
                        "nodeType": "Return",
                        "src": "1083:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    95
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "mutability": "mutable",
                      "name": "usdBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 158,
                      "src": "1109:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1109:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1152:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1144:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1144:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1144:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "usd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1130:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Usd_$740",
                          "typeString": "contract Usd"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 530,
                      "src": "1130:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:49:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "usdBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1172:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1186:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1172:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "1168:96:2",
                  "trueBody": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1189:75:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1203:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1221:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1221:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1203:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1203:30:2"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 86,
                        "id": 112,
                        "nodeType": "Return",
                        "src": "1247:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 158,
                      "src": "1273:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1273:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "lastRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1308:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1325:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1325:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 117,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1294:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1273:65:2"
                },
                {
                  "assignments": [
                    124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 158,
                      "src": "1348:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1348:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "potatoPerBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1380:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "multiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1365:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1191,
                      "src": "1365:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1348:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 135,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1425:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1417:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 133,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1417:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1417:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1432:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "potato",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1405:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Potato_$1082",
                          "typeString": "contract Potato"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1063,
                      "src": "1405:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "accPotatoPerShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1449:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 148,
                              "name": "usdBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "1525:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1515:4:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 143,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 124,
                                  "src": "1504:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1191,
                                "src": "1504:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1504:16:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1208,
                            "src": "1504:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1504:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "accPotatoPerShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1469:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1111,
                        "src": "1469:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1469:77:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1449:97:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "lastRewardBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1556:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1574:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1574:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1556:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:2:2"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:2"
            },
            "scope": 431,
            "src": "995:598:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1640:948:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 164,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1650:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:8:2"
                },
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 277,
                      "src": "1668:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1690:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 172,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1705:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1705:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1690:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1668:48:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "userBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "1730:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1744:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1730:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 205,
                  "nodeType": "IfStatement",
                  "src": "1726:272:2",
                  "trueBody": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "1747:251:2",
                    "statements": [
                      {
                        "assignments": [
                          178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 178,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 204,
                            "src": "1761:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1761:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 192,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "UserRewardDept",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1845:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 190,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1860:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1860:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1845:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1818:4:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 181,
                                      "name": "accPotatoPerShare",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18,
                                      "src": "1795:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 179,
                                      "name": "userBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 168,
                                      "src": "1779:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1191,
                                    "src": "1779:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1779:34:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1208,
                                "src": "1779:38:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1779:44:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "1779:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1779:106:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1761:124:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "1903:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1913:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1903:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 203,
                        "nodeType": "IfStatement",
                        "src": "1899:89:2",
                        "trueBody": {
                          "id": 202,
                          "nodeType": "Block",
                          "src": "1916:72:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 197,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1953:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1953:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 199,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 178,
                                    "src": "1965:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 196,
                                  "name": "safePotatoTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 412,
                                  "src": "1934:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1934:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 201,
                              "nodeType": "ExpressionStatement",
                              "src": "1934:39:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2011:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2021:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2011:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 263,
                  "nodeType": "IfStatement",
                  "src": "2007:470:2",
                  "trueBody": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "2024:453:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 214,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2063:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2063:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2055:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 212,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2055:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2055:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 219,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2084:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimpleChef_$431",
                                    "typeString": "contract SimpleChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimpleChef_$431",
                                    "typeString": "contract SimpleChef"
                                  }
                                ],
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2076:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2076:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2076:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 221,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2091:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "usd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2038:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Usd_$740",
                                "typeString": "contract Usd"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 694,
                            "src": "2038:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2038:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "2038:61:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 224,
                              "name": "stakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "2113:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 227,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 225,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2128:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2128:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2113:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 230,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "2158:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 228,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "2142:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1111,
                              "src": "2142:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2142:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2113:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:53:2"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2264:22:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "hasStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "2265:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 237,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 235,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2275:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2275:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2265:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 247,
                        "nodeType": "IfStatement",
                        "src": "2260:85:2",
                        "trueBody": {
                          "id": 246,
                          "nodeType": "Block",
                          "src": "2288:57:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 242,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2319:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2319:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 239,
                                    "name": "stakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "2306:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2306:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2306:24:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 245,
                              "nodeType": "ExpressionStatement",
                              "src": "2306:24:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "isStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2396:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 251,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2406:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2406:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2396:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2420:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2396:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "2396:28:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "hasStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "2438:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 258,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2448:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2448:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2438:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2462:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2438:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 261,
                        "nodeType": "ExpressionStatement",
                        "src": "2438:28:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "UserRewardDept",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2486:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2501:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2501:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2486:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2567:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 270,
                              "name": "accPotatoPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "2531:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2515:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1191,
                            "src": "2515:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2515:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1208,
                        "src": "2515:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2515:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2486:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2486:95:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 278,
                  "src": "1616:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1615:17:2"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:2"
            },
            "scope": 431,
            "src": "1599:989:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "2636:687:2",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 373,
                      "src": "2646:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2646:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2668:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2683:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2683:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2668:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2646:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 291,
                          "name": "userBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2712:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 292,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 280,
                          "src": "2727:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2712:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2736:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4322fa1e5ca479eb7e3e47e59bcce1b037968e6cc60044edcfbbf43798afc40",
                          "typeString": "literal_string \"withdraw: not enough staked balance\""
                        },
                        "value": "withdraw: not enough staked balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4322fa1e5ca479eb7e3e47e59bcce1b037968e6cc60044edcfbbf43798afc40",
                          "typeString": "literal_string \"withdraw: not enough staked balance\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2704:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 297,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "2784:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:8:2"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 373,
                      "src": "2802:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2802:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "UserRewardDept",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2882:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 313,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2897:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2897:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2882:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2859:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 304,
                                "name": "accPotatoPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2836:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 302,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "2820:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1191,
                              "src": "2820:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2820:34:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1208,
                          "src": "2820:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "2820:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2802:116:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "2932:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2942:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2932:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 326,
                  "nodeType": "IfStatement",
                  "src": "2928:81:2",
                  "trueBody": {
                    "id": 325,
                    "nodeType": "Block",
                    "src": "2945:64:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 320,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2978:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2978:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 322,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "2990:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 319,
                            "name": "safePotatoTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "2959:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2959:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 324,
                        "nodeType": "ExpressionStatement",
                        "src": "2959:39:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "3022:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3032:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3022:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 359,
                  "nodeType": "IfStatement",
                  "src": "3018:194:2",
                  "trueBody": {
                    "id": 358,
                    "nodeType": "Block",
                    "src": "3035:177:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 330,
                              "name": "stakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "3049:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 333,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3064:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3064:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3049:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 336,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3094:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 334,
                                "name": "userBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "3078:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1128,
                              "src": "3078:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3078:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3049:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 339,
                        "nodeType": "ExpressionStatement",
                        "src": "3049:53:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 340,
                              "name": "isStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "3116:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 343,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 341,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3126:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3126:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3116:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3140:5:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3116:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "3116:29:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 352,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3180:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3180:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3172:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 350,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3172:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3172:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 355,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "3193:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 347,
                              "name": "usd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "3159:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Usd_$740",
                                "typeString": "contract Usd"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 644,
                            "src": "3159:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3159:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "3159:42:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "UserRewardDept",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3221:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 363,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 361,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3236:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3236:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3221:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3302:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 366,
                              "name": "accPotatoPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "3266:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "3250:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1191,
                            "src": "3250:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3250:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1208,
                        "src": "3250:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3250:66:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3221:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:95:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 374,
                  "src": "2612:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2611:17:2"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:0:2"
            },
            "scope": 431,
            "src": "2594:729:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "3505:218:2",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "potatoBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 411,
                      "src": "3515:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3515:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 387,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3560:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleChef_$431",
                              "typeString": "contract SimpleChef"
                            }
                          ],
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3552:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3552:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3552:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "potato",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3535:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Potato_$1082",
                          "typeString": "contract Potato"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "3535:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3515:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 391,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "3580:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "potatoBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "3590:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3580:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "3663:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 405,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "3693:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 406,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "3698:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 402,
                              "name": "potato",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "3677:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Potato_$1082",
                                "typeString": "contract Potato"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 960,
                            "src": "3677:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3677:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 408,
                        "nodeType": "ExpressionStatement",
                        "src": "3677:29:2"
                      }
                    ]
                  },
                  "id": 410,
                  "nodeType": "IfStatement",
                  "src": "3576:141:2",
                  "trueBody": {
                    "id": 401,
                    "nodeType": "Block",
                    "src": "3601:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "3631:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 398,
                              "name": "potatoBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "3636:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 394,
                              "name": "potato",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "3615:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Potato_$1082",
                                "typeString": "contract Potato"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 960,
                            "src": "3615:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3615:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "3615:31:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safePotatoTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "3466:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "3479:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3465:30:2"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3505:0:2"
            },
            "scope": 431,
            "src": "3438:285:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "3785:107:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3803:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3803:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 420,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3817:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3803:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c6572206d757374206265207468652061646d696e",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3824:26:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3ade2e896f920d07d80ec0ab0fe83aff56554a1b63da297fadf5c1532d4015",
                          "typeString": "literal_string \"caller must be the admin\""
                        },
                        "value": "caller must be the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d3ade2e896f920d07d80ec0ab0fe83aff56554a1b63da297fadf5c1532d4015",
                          "typeString": "literal_string \"caller must be the admin\""
                        }
                      ],
                      "id": 417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3795:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:56:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "potatoPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3861:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 426,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "3878:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3861:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "3861:24:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "54508ee9",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePotatoPerBlock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 430,
                  "src": "3759:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3758:17:2"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3785:0:2"
            },
            "scope": 431,
            "src": "3729:163:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 432,
        "src": "69:3825:2"
      }
    ],
    "src": "0:3895:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610d65380380610d658339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b031991821617909155600180549390921692811692909217905543600255670de0b6b3a76400006004556006805490911633179055610ccf806100966000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a9f8d18111610097578063f206639511610066578063f20663951461025d578063f851a44014610283578063f8dcc9a91461028b578063fd5e6dd11461029357610100565b8063a9f8d181146101ee578063b6b55f25146101f6578063c93c8f3414610213578063d63a6ccd1461023957610100565b80636f49712b116100d35780636f49712b146101815780637f64038c146101bb5780638d920cb8146101c35780638dbb1e3a146101cb57610100565b80632e1a7d4d1461010557806345bc78ab1461012457806348cd4cb11461015c57806354508ee914610164575b600080fd5b6101226004803603602081101561011b57600080fd5b50356102b0565b005b61014a6004803603602081101561013a57600080fd5b50356001600160a01b0316610437565b60408051918252519081900360200190f35b61014a610449565b6101226004803603602081101561017a57600080fd5b503561044f565b6101a76004803603602081101561019757600080fd5b50356001600160a01b03166104b3565b604080519115158252519081900360200190f35b61014a6104c8565b61014a6104ce565b61014a600480360360408110156101e157600080fd5b50803590602001356104d4565b61014a6104e9565b6101226004803603602081101561020c57600080fd5b50356104ef565b6101a76004803603602081101561022957600080fd5b50356001600160a01b03166106b1565b6102416106c6565b604080516001600160a01b039092168252519081900360200190f35b61014a6004803603602081101561027357600080fd5b50356001600160a01b03166106d5565b6102416106e7565b6102416106f6565b610241600480360360208110156102a957600080fd5b5035610705565b33600090815260086020526040902054818110156102ff5760405162461bcd60e51b8152600401808060200182810382526023815260200180610c776023913960400191505060405180910390fd5b61030761072c565b33600090815260096020526040812054600554610341919061033b9064e8d4a510009061033590879061088a565b906108e3565b90610925565b90508015610353576103533382610967565b8215610404576103638284610925565b33600081815260086020908152604080832094909455600b8152838220805460ff19169055600154845163a9059cbb60e01b815260048101949094526024840188905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b505050506040513d602081101561040157600080fd5b50505b61042264e8d4a510006103356005548561088a90919063ffffffff16565b33600090815260096020526040902055505050565b60086020526000908152604090205481565b60025481565b6006546001600160a01b031633146104ae576040805162461bcd60e51b815260206004820152601860248201527f63616c6c6572206d757374206265207468652061646d696e0000000000000000604482015290519081900360640190fd5b600455565b600b6020526000908152604090205460ff1681565b60045481565b60055481565b60006104e08284610925565b90505b92915050565b60035481565b6104f761072c565b33600090815260086020526040902054801561054f573360009081526009602052604081205460055461053b919061033b9064e8d4a510009061033590879061088a565b9050801561054d5761054d3382610967565b505b811561067f57600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b506105e690508183610aff565b33600090815260086020908152604080832093909355600a9052205460ff1661064c57600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b031916331790555b336000908152600b602090815260408083208054600160ff199182168117909255600a9093529220805490911690911790555b61069d64e8d4a510006103356005548461088a90919063ffffffff16565b336000908152600960205260409020555050565b600a6020526000908152604090205460ff1681565b6001546001600160a01b031681565b60096020526000908152604090205481565b6006546001600160a01b031681565b6000546001600160a01b031681565b6007818154811061071257fe5b6000918252602090912001546001600160a01b0316905081565b600354431161073a57610888565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d60208110156107af57600080fd5b50519050806107c2575043600355610888565b60006107d0600354436104d4565b905060006107e96004548361088a90919063ffffffff16565b60008054604080516340c10f1960e01b81523060048201526024810185905290519394506001600160a01b03909116926340c10f199260448084019391929182900301818387803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b5050505061087d6108748461033564e8d4a510008561088a90919063ffffffff16565b60055490610aff565b600555505043600355505b565b600082610899575060006104e3565b828202828482816108a657fe5b04146104e05760405162461bcd60e51b8152600401808060200182810382526021815260200180610c566021913960400191505060405180910390fd5b60006104e083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610b59565b60006104e083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bfb565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156109b357600080fd5b505afa1580156109c7573d6000803e3d6000fd5b505050506040513d60208110156109dd57600080fd5b5051905080821115610a7457600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610a4257600080fd5b505af1158015610a56573d6000803e3d6000fd5b505050506040513d6020811015610a6c57600080fd5b50610afa9050565b600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610acd57600080fd5b505af1158015610ae1573d6000803e3d6000fd5b505050506040513d6020811015610af757600080fd5b50505b505050565b6000828201838110156104e0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610be55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610baa578181015183820152602001610b92565b50505050905090810190601f168015610bd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610bf157fe5b0495945050505050565b60008184841115610c4d5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610baa578181015183820152602001610b92565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7777697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365a2646970667358221220abe7f782ad4af5010de0202ee4f4c62bc3365a0a6eb0a3023259a8e9f3f3e40d64736f6c634300060c0033",
  "bytecodeSha1": "6473ff90a603f99c4eb3d7f7a67f6a3b785388ea",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SimpleChef",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "46": [
            953,
            959,
            true
          ]
        },
        "SafeMath.div": {
          "47": [
            3793,
            3798,
            true
          ]
        },
        "SafeMath.mul": {
          "44": [
            2446,
            2452,
            false
          ],
          "45": [
            2532,
            2542,
            true
          ]
        },
        "SafeMath.sub": {
          "48": [
            1826,
            1832,
            true
          ]
        }
      },
      "2": {
        "SimpleChef.deposit": {
          "37": [
            1730,
            1745,
            false
          ],
          "38": [
            1903,
            1914,
            false
          ],
          "39": [
            2011,
            2022,
            false
          ],
          "40": [
            2265,
            2286,
            false
          ]
        },
        "SimpleChef.safePotatoTransfer": {
          "43": [
            3580,
            3599,
            false
          ]
        },
        "SimpleChef.update": {
          "41": [
            1036,
            1067,
            false
          ],
          "42": [
            1172,
            1187,
            false
          ]
        },
        "SimpleChef.updatePotatoPerBlock": {
          "36": [
            3803,
            3822,
            true
          ]
        },
        "SimpleChef.withdraw": {
          "33": [
            2712,
            2734,
            true
          ],
          "34": [
            2932,
            2943,
            false
          ],
          "35": [
            3022,
            3033,
            false
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "30": [
            945,
            991
          ]
        },
        "SafeMath.div": {
          "26": [
            3145,
            3191
          ],
          "31": [
            3785,
            3813
          ]
        },
        "SafeMath.mul": {
          "24": [
            2468,
            2476
          ],
          "25": [
            2524,
            2580
          ]
        },
        "SafeMath.sub": {
          "27": [
            1365,
            1415
          ],
          "32": [
            1818,
            1847
          ]
        }
      },
      "2": {
        "SimpleChef.deposit": {
          "10": [
            1650,
            1658
          ],
          "11": [
            1934,
            1973
          ],
          "12": [
            2038,
            2099
          ],
          "13": [
            2113,
            2166
          ],
          "14": [
            2306,
            2330
          ],
          "15": [
            2396,
            2424
          ],
          "16": [
            2438,
            2466
          ],
          "17": [
            2486,
            2581
          ]
        },
        "SimpleChef.getMultiplier": {
          "9": [
            961,
            982
          ]
        },
        "SimpleChef.safePotatoTransfer": {
          "28": [
            3615,
            3646
          ],
          "29": [
            3677,
            3706
          ]
        },
        "SimpleChef.update": {
          "18": [
            1083,
            1090
          ],
          "19": [
            1203,
            1233
          ],
          "20": [
            1247,
            1254
          ],
          "21": [
            1405,
            1439
          ],
          "22": [
            1449,
            1546
          ],
          "23": [
            1556,
            1586
          ]
        },
        "SimpleChef.updatePotatoPerBlock": {
          "7": [
            3795,
            3851
          ],
          "8": [
            3861,
            3885
          ]
        },
        "SimpleChef.withdraw": {
          "0": [
            2704,
            2774
          ],
          "1": [
            2784,
            2792
          ],
          "2": [
            2959,
            2998
          ],
          "3": [
            3049,
            3102
          ],
          "4": [
            3116,
            3145
          ],
          "5": [
            3159,
            3201
          ],
          "6": [
            3221,
            3316
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "Potato",
    "SafeMath",
    "Usd"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063a9f8d18111610097578063f206639511610066578063f20663951461025d578063f851a44014610283578063f8dcc9a91461028b578063fd5e6dd11461029357610100565b8063a9f8d181146101ee578063b6b55f25146101f6578063c93c8f3414610213578063d63a6ccd1461023957610100565b80636f49712b116100d35780636f49712b146101815780637f64038c146101bb5780638d920cb8146101c35780638dbb1e3a146101cb57610100565b80632e1a7d4d1461010557806345bc78ab1461012457806348cd4cb11461015c57806354508ee914610164575b600080fd5b6101226004803603602081101561011b57600080fd5b50356102b0565b005b61014a6004803603602081101561013a57600080fd5b50356001600160a01b0316610437565b60408051918252519081900360200190f35b61014a610449565b6101226004803603602081101561017a57600080fd5b503561044f565b6101a76004803603602081101561019757600080fd5b50356001600160a01b03166104b3565b604080519115158252519081900360200190f35b61014a6104c8565b61014a6104ce565b61014a600480360360408110156101e157600080fd5b50803590602001356104d4565b61014a6104e9565b6101226004803603602081101561020c57600080fd5b50356104ef565b6101a76004803603602081101561022957600080fd5b50356001600160a01b03166106b1565b6102416106c6565b604080516001600160a01b039092168252519081900360200190f35b61014a6004803603602081101561027357600080fd5b50356001600160a01b03166106d5565b6102416106e7565b6102416106f6565b610241600480360360208110156102a957600080fd5b5035610705565b33600090815260086020526040902054818110156102ff5760405162461bcd60e51b8152600401808060200182810382526023815260200180610c776023913960400191505060405180910390fd5b61030761072c565b33600090815260096020526040812054600554610341919061033b9064e8d4a510009061033590879061088a565b906108e3565b90610925565b90508015610353576103533382610967565b8215610404576103638284610925565b33600081815260086020908152604080832094909455600b8152838220805460ff19169055600154845163a9059cbb60e01b815260048101949094526024840188905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b505050506040513d602081101561040157600080fd5b50505b61042264e8d4a510006103356005548561088a90919063ffffffff16565b33600090815260096020526040902055505050565b60086020526000908152604090205481565b60025481565b6006546001600160a01b031633146104ae576040805162461bcd60e51b815260206004820152601860248201527f63616c6c6572206d757374206265207468652061646d696e0000000000000000604482015290519081900360640190fd5b600455565b600b6020526000908152604090205460ff1681565b60045481565b60055481565b60006104e08284610925565b90505b92915050565b60035481565b6104f761072c565b33600090815260086020526040902054801561054f573360009081526009602052604081205460055461053b919061033b9064e8d4a510009061033590879061088a565b9050801561054d5761054d3382610967565b505b811561067f57600154604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b506105e690508183610aff565b33600090815260086020908152604080832093909355600a9052205460ff1661064c57600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b031916331790555b336000908152600b602090815260408083208054600160ff199182168117909255600a9093529220805490911690911790555b61069d64e8d4a510006103356005548461088a90919063ffffffff16565b336000908152600960205260409020555050565b600a6020526000908152604090205460ff1681565b6001546001600160a01b031681565b60096020526000908152604090205481565b6006546001600160a01b031681565b6000546001600160a01b031681565b6007818154811061071257fe5b6000918252602090912001546001600160a01b0316905081565b600354431161073a57610888565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d60208110156107af57600080fd5b50519050806107c2575043600355610888565b60006107d0600354436104d4565b905060006107e96004548361088a90919063ffffffff16565b60008054604080516340c10f1960e01b81523060048201526024810185905290519394506001600160a01b03909116926340c10f199260448084019391929182900301818387803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b5050505061087d6108748461033564e8d4a510008561088a90919063ffffffff16565b60055490610aff565b600555505043600355505b565b600082610899575060006104e3565b828202828482816108a657fe5b04146104e05760405162461bcd60e51b8152600401808060200182810382526021815260200180610c566021913960400191505060405180910390fd5b60006104e083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610b59565b60006104e083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bfb565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156109b357600080fd5b505afa1580156109c7573d6000803e3d6000fd5b505050506040513d60208110156109dd57600080fd5b5051905080821115610a7457600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610a4257600080fd5b505af1158015610a56573d6000803e3d6000fd5b505050506040513d6020811015610a6c57600080fd5b50610afa9050565b600080546040805163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529151919092169263a9059cbb92604480820193602093909283900390910190829087803b158015610acd57600080fd5b505af1158015610ae1573d6000803e3d6000fd5b505050506040513d6020811015610af757600080fd5b50505b505050565b6000828201838110156104e0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610be55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610baa578181015183820152602001610b92565b50505050905090810190601f168015610bd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610bf157fe5b0495945050505050565b60008184841115610c4d5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610baa578181015183820152602001610b92565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7777697468647261773a206e6f7420656e6f756768207374616b65642062616c616e6365a2646970667358221220abe7f782ad4af5010de0202ee4f4c62bc3365a0a6eb0a3023259a8e9f3f3e40d64736f6c634300060c0033",
  "deployedSourceMap": "69:3825:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2594:729;;;;;;;;;;;;;;;;-1:-1:-1;2594:729:2;;:::i;:::-;;372:49;;;;;;;;;;;;;;;;-1:-1:-1;372:49:2;-1:-1:-1;;;;;372:49:2;;:::i;:::-;;;;;;;;;;;;;;;;175:25;;;:::i;3729:163::-;;;;;;;;;;;;;;;;-1:-1:-1;3729:163:2;;:::i;529:41::-;;;;;;;;;;;;;;;;-1:-1:-1;529:41:2;-1:-1:-1;;;;;529:41:2;;:::i;:::-;;;;;;;;;;;;;;;;;;242:29;;;:::i;277:32::-;;;:::i;842:147::-;;;;;;;;;;;;;;;;-1:-1:-1;842:147:2;;;;;;;:::i;206:30::-;;;:::i;1599:989::-;;;;;;;;;;;;;;;;-1:-1:-1;1599:989:2;;:::i;482:41::-;;;;;;;;;;;;;;;;-1:-1:-1;482:41:2;-1:-1:-1;;;;;482:41:2;;:::i;154:14::-;;;:::i;:::-;;;;-1:-1:-1;;;;;154:14:2;;;;;;;;;;;;;;427:49;;;;;;;;;;;;;;;;-1:-1:-1;427:49:2;-1:-1:-1;;;;;427:49:2;;:::i;315:20::-;;;:::i;128:::-;;;:::i;342:24::-;;;;;;;;;;;;;;;;-1:-1:-1;342:24:2;;:::i;2594:729::-;2683:10;2646:19;2668:26;;;:14;:26;;;;;;2712:22;;;;2704:70;;;;-1:-1:-1;;;2704:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:8;:6;:8::i;:::-;2897:10;2802:15;2882:26;;;:14;:26;;;;;;2836:17;;2820:98;;2882:26;2820:44;;2859:4;;2820:34;;:11;;:15;:34::i;:::-;:38;;:44::i;:::-;:48;;:98::i;:::-;2802:116;-1:-1:-1;2932:11:2;;2928:81;;2959:39;2978:10;2990:7;2959:18;:39::i;:::-;3022:11;;3018:194;;3078:24;:11;3094:7;3078:15;:24::i;:::-;3064:10;3049:26;;;;:14;:26;;;;;;;;:53;;;;3116:9;:21;;;;;:29;;-1:-1:-1;;3116:29:2;;;-1:-1:-1;3159:3:2;:42;;-1:-1:-1;;;3159:42:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3159:3:2;;;;:12;;:42;;;;;;;;;;;;;:3;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3018:194:2;3250:66;3302:4;3250:34;3266:17;;3250:11;:15;;:34;;;;:::i;:66::-;3236:10;3221:26;;;;:14;:26;;;;;:95;-1:-1:-1;;;2594:729:2:o;372:49::-;;;;;;;;;;;;;:::o;175:25::-;;;;:::o;3729:163::-;3817:5;;-1:-1:-1;;;;;3817:5:2;3803:10;:19;3795:56;;;;;-1:-1:-1;;;3795:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;3861:14;:24;3729:163::o;529:41::-;;;;;;;;;;;;;;;:::o;242:29::-;;;;:::o;277:32::-;;;;:::o;842:147::-;938:7;968:14;:3;976:5;968:7;:14::i;:::-;961:21;;842:147;;;;;:::o;206:30::-;;;;:::o;1599:989::-;1650:8;:6;:8::i;:::-;1705:10;1668:19;1690:26;;;:14;:26;;;;;;1730:15;;1726:272;;1860:10;1761:15;1845:26;;;:14;:26;;;;;;1795:17;;1779:106;;1845:26;1779:44;;1818:4;;1779:34;;:11;;:15;:34::i;:106::-;1761:124;-1:-1:-1;1903:11:2;;1899:89;;1934:39;1953:10;1965:7;1934:18;:39::i;:::-;1726:272;;2011:11;;2007:470;;2038:3;;:61;;;-1:-1:-1;;;2038:61:2;;2063:10;2038:61;;;;2084:4;2038:61;;;;;;;;;;;;-1:-1:-1;;;;;2038:3:2;;;;:16;;:61;;;;;;;;;;;;;;;:3;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2142:24:2;;-1:-1:-1;2142:11:2;2158:7;2142:15;:24::i;:::-;2128:10;2113:26;;;;:14;:26;;;;;;;;:53;;;;2265:9;:21;;;;;;2260:85;;2306:7;:24;;;;;;;-1:-1:-1;2306:24:2;;;;;;;;-1:-1:-1;;;;;;2306:24:2;2319:10;2306:24;;;2260:85;2406:10;2396:21;;;;:9;:21;;;;;;;;:28;;2420:4;-1:-1:-1;;2396:28:2;;;;;;;;2438:9;:21;;;;;:28;;;;;;;;;;2007:470;2515:66;2567:4;2515:34;2531:17;;2515:11;:15;;:34;;;;:::i;:66::-;2501:10;2486:26;;;;:14;:26;;;;;:95;-1:-1:-1;;1599:989:2:o;482:41::-;;;;;;;;;;;;;;;:::o;154:14::-;;;-1:-1:-1;;;;;154:14:2;;:::o;427:49::-;;;;;;;;;;;;;:::o;315:20::-;;;-1:-1:-1;;;;;315:20:2;;:::o;128:::-;;;-1:-1:-1;;;;;128:20:2;;:::o;342:24::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;342:24:2;;-1:-1:-1;342:24:2;:::o;995:598::-;1052:15;;1036:12;:31;1032:68;;1083:7;;1032:68;1130:3;;:28;;;-1:-1:-1;;;1130:28:2;;1152:4;1130:28;;;;;;1109:18;;-1:-1:-1;;;;;1130:3:2;;:13;;:28;;;;;;;;;;;;;;:3;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1130:28:2;;-1:-1:-1;1172:15:2;1168:96;;-1:-1:-1;1221:12:2;1203:15;:30;1247:7;;1168:96;1273:18;1294:44;1308:15;;1325:12;1294:13;:44::i;:::-;1273:65;;1348:14;1365:30;1380:14;;1365:10;:14;;:30;;;;:::i;:::-;1405:6;;;:34;;;-1:-1:-1;;;1405:34:2;;1425:4;1405:34;;;;;;;;;;;;1348:47;;-1:-1:-1;;;;;;1405:6:2;;;;:11;;:34;;;;;:6;;:34;;;;;;:6;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:77;1504:32;1525:10;1504:16;1515:4;1504:6;:10;;:16;;;;:::i;:32::-;1469:17;;;:21;:77::i;:::-;1449:17;:97;-1:-1:-1;;1574:12:2;1556:15;:30;-1:-1:-1;995:598:2;:::o;2147:459:1:-;2205:7;2446:6;2442:45;;-1:-1:-1;2475:1:1;2468:8;;2442:45;2509:5;;;2513:1;2509;:5;:1;2532:5;;;;;:10;2524:56;;;;-1:-1:-1;;;2524:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3068:130;3126:7;3152:39;3156:1;3159;3152:39;;;;;;;;;;;;;;;;;:3;:39::i;1288:134::-;1346:7;1372:43;1376:1;1379;1372:43;;;;;;;;;;;;;;;;;:3;:43::i;3438:285:2:-;3515:17;3535:6;;:31;;;-1:-1:-1;;;3535:31:2;;3560:4;3535:31;;;;;;-1:-1:-1;;;;;3535:6:2;;;;:16;;:31;;;;;;;;;;;;;;;:6;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3535:31:2;;-1:-1:-1;3580:19:2;;;3576:141;;;3615:6;;;:31;;;-1:-1:-1;;;3615:31:2;;-1:-1:-1;;;;;3615:31:2;;;;;;;;;;;;;;;:6;;;;;:15;;:31;;;;;;;;;;;;;;;;;;:6;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3576:141:2;;-1:-1:-1;3576:141:2;;3677:6;;;:29;;;-1:-1:-1;;;3677:29:2;;-1:-1:-1;;;;;3677:29:2;;;;;;;;;;;;;;;:6;;;;;:15;;:29;;;;;;;;;;;;;;;;;;:6;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3576:141:2;3438:285;;;:::o;841:176:1:-;899:7;930:5;;;953:6;;;;945:46;;;;;-1:-1:-1;;;945:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:272;3766:7;3800:12;3793:5;3785:28;;;;-1:-1:-1;;;3785:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:9;3839:1;3835;:5;;;;;;;3680:272;-1:-1:-1;;;;;3680:272:1:o;1713:187::-;1799:7;1834:12;1826:6;;;;1818:29;;;;-1:-1:-1;;;1818:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1869:5:1;;;1713:187::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    69,
    3894
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9F8D181 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2066395 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2066395 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xF8DCC9A9 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x293 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC93C8F34 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xD63A6CCD EQ PUSH2 0x239 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6F49712B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6F49712B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x7F64038C EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x8D920CB8 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x1CB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x54508EE9 EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH2 0x449 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x705 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC77 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 PUSH2 0x72C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x33B SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x335 SWAP1 DUP8 SWAP1 PUSH2 0x88A JUMP JUMPDEST SWAP1 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 CALLER DUP3 PUSH2 0x967 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x404 JUMPI PUSH2 0x363 DUP3 DUP5 PUSH2 0x925 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0xB DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP9 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x422 PUSH5 0xE8D4A51000 PUSH2 0x335 PUSH1 0x5 SLOAD DUP6 PUSH2 0x88A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206D757374206265207468652061646D696E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0 DUP3 DUP5 PUSH2 0x925 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0x72C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x54F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x33B SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x335 SWAP1 DUP8 SWAP1 PUSH2 0x88A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x54D JUMPI PUSH2 0x54D CALLER DUP3 PUSH2 0x967 JUMP JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x67F JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E6 SWAP1 POP DUP2 DUP4 PUSH2 0xAFF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x64C JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x69D PUSH5 0xE8D4A51000 PUSH2 0x335 PUSH1 0x5 SLOAD DUP5 PUSH2 0x88A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x712 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x73A JUMPI PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x7C2 JUMPI POP NUMBER PUSH1 0x3 SSTORE PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH1 0x3 SLOAD NUMBER PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7E9 PUSH1 0x4 SLOAD DUP4 PUSH2 0x88A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x40C10F19 SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x87D PUSH2 0x874 DUP5 PUSH2 0x335 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x88A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP NUMBER PUSH1 0x3 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x899 JUMPI POP PUSH1 0x0 PUSH2 0x4E3 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x8A6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC56 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAFA SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBAA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB92 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBD7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xBF1 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xBAA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB92 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7777697468647261773A KECCAK256 PUSH15 0x6F7420656E6F756768207374616B65 PUSH5 0x2062616C61 PUSH15 0x6365A2646970667358221220ABE7F7 DUP3 0xAD 0x4A CREATE2 ADD 0xD 0xE0 KECCAK256 0x2E 0xE4 DELEGATECALL 0xC6 0x2B 0xC3 CALLDATASIZE GAS EXP PUSH15 0xB0A3023259A8E9F3F3E40D64736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9F8D181"
    },
    "38": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2066395"
    },
    "49": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2066395"
    },
    "60": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D"
    },
    "64": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF851A440"
    },
    "71": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "75": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF8DCC9A9"
    },
    "82": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B"
    },
    "86": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFD5E6DD1"
    },
    "93": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x293"
    },
    "97": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "101": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9F8D181"
    },
    "109": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE"
    },
    "113": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB6B55F25"
    },
    "120": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6"
    },
    "124": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC93C8F34"
    },
    "131": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x213"
    },
    "135": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD63A6CCD"
    },
    "142": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x239"
    },
    "146": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "150": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6F49712B"
    },
    "158": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "GT",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6F49712B"
    },
    "169": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "173": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7F64038C"
    },
    "180": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB"
    },
    "184": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D920CB8"
    },
    "191": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3"
    },
    "195": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DBB1E3A"
    },
    "202": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "206": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "210": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "213": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2E1A7D4D"
    },
    "218": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "224": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x45BC78AB"
    },
    "229": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124"
    },
    "233": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x48CD4CB1"
    },
    "240": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "244": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x54508EE9"
    },
    "251": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "EQ",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x164"
    },
    "255": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "257": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        69,
        3894
      ],
      "op": "REVERT",
      "path": "2"
    },
    "261": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "262": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122"
    },
    "265": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "267": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "269": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "SUB",
      "path": "2"
    },
    "270": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "272": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "273": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "LT",
      "path": "2"
    },
    "274": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "275": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B"
    },
    "278": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "279": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "281": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "282": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "REVERT",
      "path": "2"
    },
    "283": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "284": {
      "op": "POP"
    },
    "285": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "286": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B0"
    },
    "289": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "290": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "291": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "STOP",
      "path": "2"
    },
    "292": {
      "offset": [
        372,
        421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "293": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "296": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "298": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "300": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SUB",
      "path": "2"
    },
    "301": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "303": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "304": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "LT",
      "path": "2"
    },
    "305": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "306": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13A"
    },
    "309": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "310": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "312": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "313": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "REVERT",
      "path": "2"
    },
    "314": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "315": {
      "op": "POP"
    },
    "316": {
      "offset": [
        372,
        421
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "op": "SUB"
    },
    "325": {
      "offset": [
        372,
        421
      ],
      "op": "AND",
      "path": "2"
    },
    "326": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x437"
    },
    "329": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        372,
        421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "330": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "333": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "334": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "335": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "336": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "337": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "338": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "339": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "340": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "341": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "342": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SUB",
      "path": "2"
    },
    "343": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "345": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "ADD",
      "path": "2"
    },
    "346": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "347": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "RETURN",
      "path": "2"
    },
    "348": {
      "offset": [
        175,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "349": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "352": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x449"
    },
    "355": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        175,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "356": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "357": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122"
    },
    "360": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "362": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "363": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "364": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "SUB",
      "path": "2"
    },
    "365": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "367": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "368": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "LT",
      "path": "2"
    },
    "369": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "370": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "373": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "376": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "377": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "REVERT",
      "path": "2"
    },
    "378": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "op": "POP"
    },
    "380": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "381": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44F"
    },
    "384": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "i",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "385": {
      "offset": [
        529,
        570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "386": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "389": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "391": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "392": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "393": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SUB",
      "path": "2"
    },
    "394": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "396": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "397": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "LT",
      "path": "2"
    },
    "398": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "399": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197"
    },
    "402": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "403": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "405": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "406": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "REVERT",
      "path": "2"
    },
    "407": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "408": {
      "op": "POP"
    },
    "409": {
      "offset": [
        529,
        570
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "op": "SUB"
    },
    "418": {
      "offset": [
        529,
        570
      ],
      "op": "AND",
      "path": "2"
    },
    "419": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B3"
    },
    "422": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "i",
      "offset": [
        529,
        570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "423": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "424": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "426": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "427": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "428": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "429": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "430": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "431": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP3",
      "path": "2"
    },
    "432": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "433": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "434": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "435": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "436": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "437": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SUB",
      "path": "2"
    },
    "438": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "440": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "ADD",
      "path": "2"
    },
    "441": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "442": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "RETURN",
      "path": "2"
    },
    "443": {
      "offset": [
        242,
        271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "444": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        242,
        271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "447": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        242,
        271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C8"
    },
    "450": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "i",
      "offset": [
        242,
        271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "451": {
      "offset": [
        277,
        309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "452": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        277,
        309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "455": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        277,
        309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CE"
    },
    "458": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "i",
      "offset": [
        277,
        309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "459": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "463": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "465": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "DUP1",
      "path": "2"
    },
    "466": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "467": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "SUB",
      "path": "2"
    },
    "468": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "470": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "DUP2",
      "path": "2"
    },
    "471": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "LT",
      "path": "2"
    },
    "472": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "473": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E1"
    },
    "476": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "477": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "479": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "DUP1",
      "path": "2"
    },
    "480": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "REVERT",
      "path": "2"
    },
    "481": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "DUP1",
      "path": "2"
    },
    "484": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "485": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "486": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "488": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "ADD",
      "path": "2"
    },
    "489": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "490": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "493": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "i",
      "offset": [
        842,
        989
      ],
      "op": "JUMP",
      "path": "2"
    },
    "494": {
      "offset": [
        206,
        236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "495": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        206,
        236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "498": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        206,
        236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E9"
    },
    "501": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "i",
      "offset": [
        206,
        236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "502": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "503": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122"
    },
    "506": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "508": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "DUP1",
      "path": "2"
    },
    "509": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "510": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "SUB",
      "path": "2"
    },
    "511": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "513": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "DUP2",
      "path": "2"
    },
    "514": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "LT",
      "path": "2"
    },
    "515": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "516": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C"
    },
    "519": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "520": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "522": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "DUP1",
      "path": "2"
    },
    "523": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "REVERT",
      "path": "2"
    },
    "524": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "527": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EF"
    },
    "530": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMP",
      "path": "2"
    },
    "531": {
      "offset": [
        482,
        523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "532": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "535": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "537": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "DUP1",
      "path": "2"
    },
    "538": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "539": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "SUB",
      "path": "2"
    },
    "540": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "542": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "543": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "LT",
      "path": "2"
    },
    "544": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "545": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229"
    },
    "548": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "549": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "551": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "DUP1",
      "path": "2"
    },
    "552": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "REVERT",
      "path": "2"
    },
    "553": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "offset": [
        482,
        523
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "op": "SUB"
    },
    "564": {
      "offset": [
        482,
        523
      ],
      "op": "AND",
      "path": "2"
    },
    "565": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B1"
    },
    "568": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        482,
        523
      ],
      "op": "JUMP",
      "path": "2"
    },
    "569": {
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "570": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "573": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C6"
    },
    "576": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        154,
        168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "577": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "578": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "580": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP1",
      "path": "2"
    },
    "581": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "591": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "592": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "AND",
      "path": "2"
    },
    "593": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP3",
      "path": "2"
    },
    "594": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "595": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "596": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "597": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "598": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "599": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SUB",
      "path": "2"
    },
    "600": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "602": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "ADD",
      "path": "2"
    },
    "603": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "604": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "RETURN",
      "path": "2"
    },
    "605": {
      "offset": [
        427,
        476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "606": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "609": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "611": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "613": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "SUB",
      "path": "2"
    },
    "614": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "616": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "617": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "LT",
      "path": "2"
    },
    "618": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "619": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273"
    },
    "622": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "623": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "625": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "626": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "REVERT",
      "path": "2"
    },
    "627": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "offset": [
        427,
        476
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "636": {
      "op": "SHL"
    },
    "637": {
      "op": "SUB"
    },
    "638": {
      "offset": [
        427,
        476
      ],
      "op": "AND",
      "path": "2"
    },
    "639": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D5"
    },
    "642": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        427,
        476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "643": {
      "offset": [
        315,
        335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "644": {
      "fn": "SimpleChef.deposit",
      "offset": [
        315,
        335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "647": {
      "fn": "SimpleChef.deposit",
      "offset": [
        315,
        335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E7"
    },
    "650": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        315,
        335
      ],
      "op": "JUMP",
      "path": "2"
    },
    "651": {
      "offset": [
        128,
        148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "652": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "655": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F6"
    },
    "658": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        128,
        148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "659": {
      "offset": [
        342,
        366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "660": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "663": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "665": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP1",
      "path": "2"
    },
    "666": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "667": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SUB",
      "path": "2"
    },
    "668": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "670": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "671": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "LT",
      "path": "2"
    },
    "672": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "673": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A9"
    },
    "676": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "677": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "679": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP1",
      "path": "2"
    },
    "680": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "REVERT",
      "path": "2"
    },
    "681": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "682": {
      "op": "POP"
    },
    "683": {
      "offset": [
        342,
        366
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "684": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x705"
    },
    "687": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        342,
        366
      ],
      "op": "JUMP",
      "path": "2"
    },
    "688": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "689": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2683,
        2693
      ],
      "op": "CALLER",
      "path": "2"
    },
    "690": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2646,
        2665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "692": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "693": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "DUP2",
      "path": "2"
    },
    "694": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "695": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "697": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "699": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "700": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "702": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "703": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "704": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2668,
        2694
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "705": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2712,
        2734
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 0
    },
    "706": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2712,
        2734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "707": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2712,
        2734
      ],
      "op": "LT",
      "path": "2"
    },
    "708": {
      "branch": 33,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2712,
        2734
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "709": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF"
    },
    "712": {
      "branch": 33,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "713": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "715": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "724": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "725": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "727": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "ADD",
      "path": "2"
    },
    "728": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "729": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "730": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "732": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "ADD",
      "path": "2"
    },
    "733": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP3",
      "path": "2"
    },
    "734": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "735": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SUB",
      "path": "2"
    },
    "736": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP3",
      "path": "2"
    },
    "737": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "738": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "740": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "741": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "742": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "744": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "ADD",
      "path": "2"
    },
    "745": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "746": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC77"
    },
    "749": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "751": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "752": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "753": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "755": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "ADD",
      "path": "2"
    },
    "756": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "757": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "POP",
      "path": "2"
    },
    "758": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "POP",
      "path": "2"
    },
    "759": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "761": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "762": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "763": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "764": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SUB",
      "path": "2"
    },
    "765": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "766": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "REVERT",
      "path": "2"
    },
    "767": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2704,
        2774
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "768": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2784,
        2792
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 1,
      "value": "0x307"
    },
    "771": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2784,
        2790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72C"
    },
    "774": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2784,
        2792
      ],
      "op": "JUMP",
      "path": "2"
    },
    "775": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2784,
        2792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "776": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2897,
        2907
      ],
      "op": "CALLER",
      "path": "2"
    },
    "777": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2802,
        2817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "779": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "780": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "781": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "782": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "784": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "786": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "787": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "789": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "790": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "791": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "792": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2836,
        2853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "794": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2836,
        2853
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "795": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "798": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2918
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "799": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2882,
        2908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "800": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B"
    },
    "803": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "804": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2859,
        2863
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "810": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2859,
        2863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "811": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "814": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2854
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "815": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2831
      ],
      "op": "DUP8",
      "path": "2"
    },
    "816": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "817": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "820": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2820,
        2854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "821": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "822": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "823": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E3"
    },
    "826": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2820,
        2864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "827": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "828": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "829": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "832": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2820,
        2918
      ],
      "op": "JUMP",
      "path": "2"
    },
    "833": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2820,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "834": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2802,
        2918
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2943
      ],
      "op": "DUP1",
      "path": "2"
    },
    "837": {
      "branch": 34,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2932,
        2943
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "838": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2928,
        3009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "841": {
      "branch": 34,
      "fn": "SimpleChef.withdraw",
      "offset": [
        2928,
        3009
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "842": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2959,
        2998
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 2,
      "value": "0x353"
    },
    "845": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2978,
        2988
      ],
      "op": "CALLER",
      "path": "2"
    },
    "846": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2990,
        2997
      ],
      "op": "DUP3",
      "path": "2"
    },
    "847": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2959,
        2977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x967"
    },
    "850": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        2959,
        2998
      ],
      "op": "JUMP",
      "path": "2"
    },
    "851": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        2959,
        2998
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "852": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3022,
        3033
      ],
      "op": "DUP3",
      "path": "2"
    },
    "853": {
      "branch": 35,
      "fn": "SimpleChef.withdraw",
      "offset": [
        3022,
        3033
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "854": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3018,
        3212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x404"
    },
    "857": {
      "branch": 35,
      "fn": "SimpleChef.withdraw",
      "offset": [
        3018,
        3212
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "858": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3078,
        3102
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 3,
      "value": "0x363"
    },
    "861": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3078,
        3089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "862": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3094,
        3101
      ],
      "op": "DUP5",
      "path": "2"
    },
    "863": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3078,
        3093
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "866": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        3078,
        3102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "867": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3078,
        3102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "868": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3064,
        3074
      ],
      "op": "CALLER",
      "path": "2"
    },
    "869": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "871": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "DUP2",
      "path": "2"
    },
    "872": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "DUP2",
      "path": "2"
    },
    "873": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "874": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "876": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "878": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "879": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "DUP2",
      "path": "2"
    },
    "880": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "881": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "883": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "884": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "885": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3075
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "886": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3102
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "887": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "888": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3102
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "889": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3049,
        3102
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "890": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0xB"
    },
    "892": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "893": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3137
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "894": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3137
      ],
      "op": "DUP4",
      "path": "2"
    },
    "895": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3137
      ],
      "op": "DUP3",
      "path": "2"
    },
    "896": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3137
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "897": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3145
      ],
      "op": "DUP1",
      "path": "2"
    },
    "898": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3145
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "899": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "901": {
      "op": "NOT"
    },
    "902": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3145
      ],
      "op": "AND",
      "path": "2"
    },
    "903": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "904": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3116,
        3145
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 5
    },
    "908": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP5",
      "path": "2"
    },
    "909": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "910": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "919": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "920": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "922": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "923": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ADD",
      "path": "2"
    },
    "924": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "925": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "926": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "927": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "928": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "930": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP5",
      "path": "2"
    },
    "931": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ADD",
      "path": "2"
    },
    "932": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP9",
      "path": "2"
    },
    "933": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "934": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "935": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "936": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "946": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "947": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "AND",
      "path": "2"
    },
    "948": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "949": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3171
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "954": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3171
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "955": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "957": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "958": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP3",
      "path": "2"
    },
    "959": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ADD",
      "path": "2"
    },
    "960": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "961": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "962": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP4",
      "path": "2"
    },
    "963": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "964": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SUB",
      "path": "2"
    },
    "965": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ADD",
      "path": "2"
    },
    "966": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "967": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP3",
      "path": "2"
    },
    "968": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "969": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3162
      ],
      "op": "DUP8",
      "path": "2"
    },
    "970": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "971": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "972": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "973": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "974": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "975": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D7"
    },
    "978": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "979": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "981": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "982": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "983": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "984": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "POP",
      "path": "2"
    },
    "985": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "GAS",
      "path": "2"
    },
    "986": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "CALL",
      "path": "2"
    },
    "987": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "988": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "989": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "990": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "993": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "994": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "995": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "997": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "998": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "999": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1000": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1002": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1003": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1004": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "POP",
      "path": "2"
    },
    "1005": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "POP",
      "path": "2"
    },
    "1006": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "POP",
      "path": "2"
    },
    "1007": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "POP",
      "path": "2"
    },
    "1008": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1010": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1011": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1012": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1014": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1015": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "LT",
      "path": "2"
    },
    "1016": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1017": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x401"
    },
    "1020": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1021": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1023": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1024": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1025": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3159,
        3201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3018,
        3212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1029": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3316
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 6,
      "value": "0x422"
    },
    "1032": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3302,
        3306
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1038": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3284
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "1041": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3266,
        3283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1043": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3266,
        3283
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1044": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3261
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1045": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "1048": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3265
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1049": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3284
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1050": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1051": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3284
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1056": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3284
      ],
      "op": "AND",
      "path": "2"
    },
    "1057": {
      "fn": "SimpleChef.withdraw",
      "jump": "i",
      "offset": [
        3250,
        3284
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1058": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3250,
        3316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1059": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3236,
        3246
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1060": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1062": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1063": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1064": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1065": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1067": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1069": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1070": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1072": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1073": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1074": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        3221,
        3316
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1075": {
      "op": "POP"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        2594,
        3323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1079": {
      "offset": [
        372,
        421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1080": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1082": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1084": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1085": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1087": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1088": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1089": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1090": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1092": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1093": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1094": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1095": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        372,
        421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1096": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        372,
        421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1097": {
      "offset": [
        175,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1098": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1100": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1101": {
      "fn": "SimpleChef.withdraw",
      "offset": [
        175,
        200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1102": {
      "fn": "SimpleChef.withdraw",
      "jump": "o",
      "offset": [
        175,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1103": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1104": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3817,
        3822
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x6"
    },
    "1106": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3817,
        3822
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "op": "SUB"
    },
    "1115": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3817,
        3822
      ],
      "op": "AND",
      "path": "2"
    },
    "1116": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3803,
        3813
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1117": {
      "branch": 36,
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3803,
        3822
      ],
      "op": "EQ",
      "path": "2"
    },
    "1118": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "1121": {
      "branch": 36,
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1122": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1124": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1125": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1134": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1135": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1137": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1139": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1140": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "ADD",
      "path": "2"
    },
    "1141": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1142": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x18"
    },
    "1144": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1146": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1147": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "ADD",
      "path": "2"
    },
    "1148": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1149": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x63616C6C6572206D757374206265207468652061646D696E0000000000000000"
    },
    "1182": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1184": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1185": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "ADD",
      "path": "2"
    },
    "1186": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1187": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1188": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1189": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1190": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1191": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1192": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "SUB",
      "path": "2"
    },
    "1193": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1195": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "ADD",
      "path": "2"
    },
    "1196": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1197": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1198": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3795,
        3851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1199": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3861,
        3875
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x4"
    },
    "1201": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        3861,
        3885
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1202": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "o",
      "offset": [
        3729,
        3892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1203": {
      "offset": [
        529,
        570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1204": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1206": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1208": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1209": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1211": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1212": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1213": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1214": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1216": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1217": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1218": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1219": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1221": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "AND",
      "path": "2"
    },
    "1222": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        529,
        570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1223": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "o",
      "offset": [
        529,
        570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1224": {
      "offset": [
        242,
        271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1225": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        242,
        271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1227": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        242,
        271
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1228": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        242,
        271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1229": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "o",
      "offset": [
        242,
        271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1230": {
      "offset": [
        277,
        309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1231": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        277,
        309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1233": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        277,
        309
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1234": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "offset": [
        277,
        309
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1235": {
      "fn": "SimpleChef.updatePotatoPerBlock",
      "jump": "o",
      "offset": [
        277,
        309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1236": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1237": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        938,
        945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1239": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        968,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x4E0"
    },
    "1242": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        968,
        971
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1243": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        976,
        981
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1244": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        968,
        975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "1247": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "i",
      "offset": [
        968,
        982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1248": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        968,
        982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1249": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        961,
        982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1250": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        961,
        982
      ],
      "op": "POP",
      "path": "2"
    },
    "1251": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1252": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1253": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1254": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "POP",
      "path": "2"
    },
    "1255": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        842,
        989
      ],
      "op": "POP",
      "path": "2"
    },
    "1256": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "o",
      "offset": [
        842,
        989
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1257": {
      "offset": [
        206,
        236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1258": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        206,
        236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1260": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        206,
        236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1261": {
      "fn": "SimpleChef.getMultiplier",
      "offset": [
        206,
        236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1262": {
      "fn": "SimpleChef.getMultiplier",
      "jump": "o",
      "offset": [
        206,
        236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1263": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1264": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1650,
        1658
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x4F7"
    },
    "1267": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1650,
        1656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72C"
    },
    "1270": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1650,
        1658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1271": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1650,
        1658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1272": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1705,
        1715
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1273": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1668,
        1687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1275": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1276": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1277": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1278": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1280": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1282": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1283": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1285": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1286": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1287": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1690,
        1716
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1288": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1730,
        1745
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1289": {
      "branch": 37,
      "fn": "SimpleChef.deposit",
      "offset": [
        1730,
        1745
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1290": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1726,
        1998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54F"
    },
    "1293": {
      "branch": 37,
      "fn": "SimpleChef.deposit",
      "offset": [
        1726,
        1998
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1294": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1860,
        1870
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1295": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1761,
        1776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1297": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1298": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1299": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1300": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1302": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1304": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1305": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1307": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1308": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1309": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1310": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1795,
        1812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1312": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1795,
        1812
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1313": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53B"
    },
    "1316": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1885
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1317": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1845,
        1871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1318": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B"
    },
    "1321": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1322": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1818,
        1822
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1328": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1818,
        1822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1329": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "1332": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1333": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1790
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1334": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1335": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "1338": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1779,
        1813
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1339": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1779,
        1885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1340": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1761,
        1885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1903,
        1914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1343": {
      "branch": 38,
      "fn": "SimpleChef.deposit",
      "offset": [
        1903,
        1914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1344": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1899,
        1988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54D"
    },
    "1347": {
      "branch": 38,
      "fn": "SimpleChef.deposit",
      "offset": [
        1899,
        1988
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1348": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1934,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x54D"
    },
    "1351": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1953,
        1963
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1352": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1965,
        1972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1353": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1934,
        1952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x967"
    },
    "1356": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        1934,
        1973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1357": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1934,
        1973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1358": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1726,
        1998
      ],
      "op": "POP",
      "path": "2"
    },
    "1359": {
      "fn": "SimpleChef.deposit",
      "offset": [
        1726,
        1998
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2011,
        2022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1361": {
      "branch": 39,
      "fn": "SimpleChef.deposit",
      "offset": [
        2011,
        2022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1362": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2007,
        2477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67F"
    },
    "1365": {
      "branch": 39,
      "fn": "SimpleChef.deposit",
      "offset": [
        2007,
        2477
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1366": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "1368": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1369": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1371": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1372": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1373": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1382": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1383": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2063,
        2073
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1384": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1386": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1387": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ADD",
      "path": "2"
    },
    "1388": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1389": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2084,
        2088
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1390": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1392": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1393": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ADD",
      "path": "2"
    },
    "1394": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1395": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1397": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1398": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ADD",
      "path": "2"
    },
    "1399": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1400": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1401": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1402": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1403": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1413": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1414": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "AND",
      "path": "2"
    },
    "1415": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1416": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2054
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "1421": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1422": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1424": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1425": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1426": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ADD",
      "path": "2"
    },
    "1427": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1428": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1430": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1431": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1432": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1433": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1434": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1435": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1436": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "SUB",
      "path": "2"
    },
    "1437": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ADD",
      "path": "2"
    },
    "1438": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1439": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1441": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2041
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1442": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1443": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1444": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1445": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1446": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1447": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5AF"
    },
    "1450": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1451": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1453": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1454": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1455": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1456": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1457": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "GAS",
      "path": "2"
    },
    "1458": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "CALL",
      "path": "2"
    },
    "1459": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1460": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1461": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1462": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C3"
    },
    "1465": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1466": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1467": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1469": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1470": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1471": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1472": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1474": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1475": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1476": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1477": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1478": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1479": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1480": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1482": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1483": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1484": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1486": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1487": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "LT",
      "path": "2"
    },
    "1488": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1489": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "1492": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1493": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1495": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1496": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1497": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2038,
        2099
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2142,
        2166
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x5E6"
    },
    "1502": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2142,
        2166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1503": {
      "op": "POP"
    },
    "1504": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2142,
        2153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1505": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2158,
        2165
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1506": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2142,
        2157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFF"
    },
    "1509": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        2142,
        2166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1510": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2142,
        2166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1511": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2128,
        2138
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1512": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1514": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1515": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1516": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1517": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1519": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1521": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1522": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1523": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1524": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1526": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1527": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1528": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2139
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1529": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2166
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1530": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1531": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2166
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1532": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2113,
        2166
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1533": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1535": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1536": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1537": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1538": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1539": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1541": {
      "branch": 40,
      "fn": "SimpleChef.deposit",
      "offset": [
        2265,
        2286
      ],
      "op": "AND",
      "path": "2"
    },
    "1542": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2260,
        2345
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64C"
    },
    "1545": {
      "branch": 40,
      "fn": "SimpleChef.deposit",
      "offset": [
        2260,
        2345
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1546": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2313
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x7"
    },
    "1548": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1549": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1550": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1552": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1553": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "ADD",
      "path": "2"
    },
    "1554": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1555": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1558": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1559": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1560": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1561": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1562": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1595": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "ADD",
      "path": "2"
    },
    "1596": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1597": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "op": "NOT"
    },
    "1607": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "AND",
      "path": "2"
    },
    "1608": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2319,
        2329
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1609": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "OR",
      "path": "2"
    },
    "1610": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1611": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2306,
        2330
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1612": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2260,
        2345
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1613": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2406,
        2416
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 15
    },
    "1614": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1616": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1617": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1618": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1619": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1621": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1623": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1624": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1625": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1626": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1628": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1629": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1630": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2417
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1631": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1632": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1633": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2420,
        2424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1637": {
      "op": "NOT"
    },
    "1638": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1639": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1640": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "AND",
      "path": "2"
    },
    "1641": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1642": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "OR",
      "path": "2"
    },
    "1643": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1644": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1645": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2396,
        2424
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1646": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2447
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0xA"
    },
    "1648": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1649": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2459
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1650": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2459
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1651": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2459
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1652": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2459
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1653": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1654": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1655": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1656": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1657": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "AND",
      "path": "2"
    },
    "1658": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1659": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1660": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "OR",
      "path": "2"
    },
    "1661": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1662": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2438,
        2466
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1663": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2007,
        2477
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1664": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2581
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 17,
      "value": "0x69D"
    },
    "1667": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2567,
        2571
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "1673": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2549
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "1676": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2531,
        2548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1678": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2531,
        2548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1679": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2526
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1680": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "1683": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1684": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2549
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1685": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1686": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2549
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1691": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2549
      ],
      "op": "AND",
      "path": "2"
    },
    "1692": {
      "fn": "SimpleChef.deposit",
      "jump": "i",
      "offset": [
        2515,
        2549
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1693": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2515,
        2581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1694": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2501,
        2511
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1695": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1697": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1698": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1699": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1700": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1702": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1704": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1705": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1707": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1708": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2512
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1709": {
      "fn": "SimpleChef.deposit",
      "offset": [
        2486,
        2581
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        1599,
        2588
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1713": {
      "offset": [
        482,
        523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1714": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1716": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1718": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1719": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1721": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1722": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1723": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1724": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1726": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1727": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1728": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1729": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1731": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "AND",
      "path": "2"
    },
    "1732": {
      "fn": "SimpleChef.deposit",
      "offset": [
        482,
        523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1733": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        482,
        523
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1734": {
      "offset": [
        154,
        168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1735": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1737": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1744": {
      "op": "SHL"
    },
    "1745": {
      "op": "SUB"
    },
    "1746": {
      "offset": [
        154,
        168
      ],
      "op": "AND",
      "path": "2"
    },
    "1747": {
      "fn": "SimpleChef.deposit",
      "offset": [
        154,
        168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1748": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        154,
        168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1749": {
      "offset": [
        427,
        476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1750": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1752": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1754": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1755": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1757": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1758": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1759": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1760": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1762": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1763": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1764": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1765": {
      "fn": "SimpleChef.deposit",
      "offset": [
        427,
        476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1766": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        427,
        476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1767": {
      "offset": [
        315,
        335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1768": {
      "fn": "SimpleChef.deposit",
      "offset": [
        315,
        335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1770": {
      "fn": "SimpleChef.deposit",
      "offset": [
        315,
        335
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "offset": [
        315,
        335
      ],
      "op": "AND",
      "path": "2"
    },
    "1780": {
      "fn": "SimpleChef.deposit",
      "offset": [
        315,
        335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1781": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        315,
        335
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1782": {
      "offset": [
        128,
        148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1783": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1785": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "offset": [
        128,
        148
      ],
      "op": "AND",
      "path": "2"
    },
    "1795": {
      "fn": "SimpleChef.deposit",
      "offset": [
        128,
        148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1796": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        128,
        148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1797": {
      "offset": [
        342,
        366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1798": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1800": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1801": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1802": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1803": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1804": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "LT",
      "path": "2"
    },
    "1805": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "1808": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1809": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "INVALID",
      "path": "2"
    },
    "1810": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1811": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1813": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1814": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1815": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1816": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1818": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1819": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1820": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1821": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "ADD",
      "path": "2"
    },
    "1822": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "op": "SUB"
    },
    "1831": {
      "offset": [
        342,
        366
      ],
      "op": "AND",
      "path": "2"
    },
    "1832": {
      "fn": "SimpleChef.deposit",
      "offset": [
        342,
        366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "offset": [
        342,
        366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1835": {
      "fn": "SimpleChef.deposit",
      "jump": "o",
      "offset": [
        342,
        366
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1836": {
      "fn": "SimpleChef.update",
      "offset": [
        995,
        1593
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1837": {
      "fn": "SimpleChef.update",
      "offset": [
        1052,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1839": {
      "fn": "SimpleChef.update",
      "offset": [
        1052,
        1067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1840": {
      "fn": "SimpleChef.update",
      "offset": [
        1036,
        1048
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "1841": {
      "branch": 41,
      "fn": "SimpleChef.update",
      "offset": [
        1036,
        1067
      ],
      "op": "GT",
      "path": "2"
    },
    "1842": {
      "fn": "SimpleChef.update",
      "offset": [
        1032,
        1100
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73A"
    },
    "1845": {
      "branch": 41,
      "fn": "SimpleChef.update",
      "offset": [
        1032,
        1100
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1846": {
      "fn": "SimpleChef.update",
      "offset": [
        1083,
        1090
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0x888"
    },
    "1849": {
      "fn": "SimpleChef.update",
      "offset": [
        1083,
        1090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1850": {
      "fn": "SimpleChef.update",
      "offset": [
        1032,
        1100
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1851": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1853": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1854": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1856": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1857": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1858": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1867": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1868": {
      "fn": "SimpleChef.update",
      "offset": [
        1152,
        1156
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1869": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1871": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1872": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ADD",
      "path": "2"
    },
    "1873": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1874": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1875": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1876": {
      "fn": "SimpleChef.update",
      "offset": [
        1109,
        1127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1878": {
      "fn": "SimpleChef.update",
      "offset": [
        1109,
        1127
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "SUB"
    },
    "1887": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1133
      ],
      "op": "AND",
      "path": "2"
    },
    "1888": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1889": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1143
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1894": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1143
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1895": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1897": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1898": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1899": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ADD",
      "path": "2"
    },
    "1900": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1901": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1903": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1904": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1905": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1906": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1907": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1908": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SUB",
      "path": "2"
    },
    "1909": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ADD",
      "path": "2"
    },
    "1910": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1911": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1133
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1912": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1913": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1914": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1915": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1916": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1917": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x785"
    },
    "1920": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1921": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1923": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1924": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1925": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1926": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "1927": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "GAS",
      "path": "2"
    },
    "1928": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1929": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1930": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1931": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1932": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x799"
    },
    "1935": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1936": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1937": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1939": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1940": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1941": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1942": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1944": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1945": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1946": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "1947": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "1948": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "1949": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "POP",
      "path": "2"
    },
    "1950": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1952": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1953": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1954": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1956": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1957": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "LT",
      "path": "2"
    },
    "1958": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1959": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "1962": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1963": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1965": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1966": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1967": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1970": {
      "fn": "SimpleChef.update",
      "offset": [
        1130,
        1158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "branch": 42,
      "fn": "SimpleChef.update",
      "offset": [
        1172,
        1187
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1973": {
      "fn": "SimpleChef.update",
      "offset": [
        1168,
        1264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C2"
    },
    "1976": {
      "branch": 42,
      "fn": "SimpleChef.update",
      "offset": [
        1168,
        1264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "fn": "SimpleChef.update",
      "offset": [
        1221,
        1233
      ],
      "op": "NUMBER",
      "path": "2",
      "statement": 19
    },
    "1979": {
      "fn": "SimpleChef.update",
      "offset": [
        1203,
        1218
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1981": {
      "fn": "SimpleChef.update",
      "offset": [
        1203,
        1233
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1982": {
      "fn": "SimpleChef.update",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0x888"
    },
    "1985": {
      "fn": "SimpleChef.update",
      "offset": [
        1247,
        1254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1986": {
      "fn": "SimpleChef.update",
      "offset": [
        1168,
        1264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1987": {
      "fn": "SimpleChef.update",
      "offset": [
        1273,
        1291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1989": {
      "fn": "SimpleChef.update",
      "offset": [
        1294,
        1338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D0"
    },
    "1992": {
      "fn": "SimpleChef.update",
      "offset": [
        1308,
        1323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1994": {
      "fn": "SimpleChef.update",
      "offset": [
        1308,
        1323
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1995": {
      "fn": "SimpleChef.update",
      "offset": [
        1325,
        1337
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "1996": {
      "fn": "SimpleChef.update",
      "offset": [
        1294,
        1307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "1999": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1294,
        1338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2000": {
      "fn": "SimpleChef.update",
      "offset": [
        1294,
        1338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2001": {
      "fn": "SimpleChef.update",
      "offset": [
        1273,
        1338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2002": {
      "fn": "SimpleChef.update",
      "offset": [
        1273,
        1338
      ],
      "op": "POP",
      "path": "2"
    },
    "2003": {
      "fn": "SimpleChef.update",
      "offset": [
        1348,
        1362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2005": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E9"
    },
    "2008": {
      "fn": "SimpleChef.update",
      "offset": [
        1380,
        1394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2010": {
      "fn": "SimpleChef.update",
      "offset": [
        1380,
        1394
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2011": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1375
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2012": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "2015": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2016": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2017": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2018": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2023": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "AND",
      "path": "2"
    },
    "2024": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1365,
        1395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2025": {
      "fn": "SimpleChef.update",
      "offset": [
        1365,
        1395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2026": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x0"
    },
    "2028": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2029": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2030": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2032": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2033": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2034": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2043": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2044": {
      "fn": "SimpleChef.update",
      "offset": [
        1425,
        1429
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2045": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2047": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2048": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ADD",
      "path": "2"
    },
    "2049": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2050": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2052": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2053": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ADD",
      "path": "2"
    },
    "2054": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2055": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2056": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2057": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2059": {
      "fn": "SimpleChef.update",
      "offset": [
        1348,
        1395
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2060": {
      "fn": "SimpleChef.update",
      "offset": [
        1348,
        1395
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2071": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2072": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "AND",
      "path": "2"
    },
    "2073": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2074": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1416
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "2079": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1416
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2080": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2082": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2083": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2084": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ADD",
      "path": "2"
    },
    "2085": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2086": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2087": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2088": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2089": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2090": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2091": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "SUB",
      "path": "2"
    },
    "2092": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ADD",
      "path": "2"
    },
    "2093": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2094": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2095": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1411
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2096": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2097": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2098": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2099": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2100": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2101": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83D"
    },
    "2104": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2105": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2107": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2108": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2109": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2110": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "POP",
      "path": "2"
    },
    "2111": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "GAS",
      "path": "2"
    },
    "2112": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "CALL",
      "path": "2"
    },
    "2113": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2114": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2115": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2116": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x851"
    },
    "2119": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2120": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2121": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2123": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2124": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2125": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2126": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2128": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2129": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2130": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "POP",
      "path": "2"
    },
    "2131": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "POP",
      "path": "2"
    },
    "2132": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "POP",
      "path": "2"
    },
    "2133": {
      "fn": "SimpleChef.update",
      "offset": [
        1405,
        1439
      ],
      "op": "POP",
      "path": "2"
    },
    "2134": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1546
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0x87D"
    },
    "2137": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x874"
    },
    "2140": {
      "fn": "SimpleChef.update",
      "offset": [
        1525,
        1535
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2141": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "2144": {
      "fn": "SimpleChef.update",
      "offset": [
        1515,
        1519
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xE8D4A51000"
    },
    "2150": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1510
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2151": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "2154": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1514
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2155": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1520
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2156": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1520
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2157": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1520
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2162": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1520
      ],
      "op": "AND",
      "path": "2"
    },
    "2163": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1504,
        1520
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2164": {
      "fn": "SimpleChef.update",
      "offset": [
        1504,
        1536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2165": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2167": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1486
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2168": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2169": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFF"
    },
    "2172": {
      "fn": "SimpleChef.update",
      "jump": "i",
      "offset": [
        1469,
        1546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2173": {
      "fn": "SimpleChef.update",
      "offset": [
        1469,
        1546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2174": {
      "fn": "SimpleChef.update",
      "offset": [
        1449,
        1466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2176": {
      "fn": "SimpleChef.update",
      "offset": [
        1449,
        1546
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "fn": "SimpleChef.update",
      "offset": [
        1574,
        1586
      ],
      "op": "NUMBER",
      "path": "2",
      "statement": 23
    },
    "2180": {
      "fn": "SimpleChef.update",
      "offset": [
        1556,
        1571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2182": {
      "fn": "SimpleChef.update",
      "offset": [
        1556,
        1586
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "fn": "SimpleChef.update",
      "offset": [
        995,
        1593
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2185": {
      "fn": "SimpleChef.update",
      "jump": "o",
      "offset": [
        995,
        1593
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2186": {
      "fn": "SafeMath.mul",
      "offset": [
        2147,
        2606
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2187": {
      "fn": "SafeMath.mul",
      "offset": [
        2205,
        2212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2189": {
      "branch": 44,
      "fn": "SafeMath.mul",
      "offset": [
        2446,
        2452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2190": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x899"
    },
    "2193": {
      "branch": 44,
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2476
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "2197": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E3"
    },
    "2200": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2201": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2202": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2203": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2204": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "MUL",
      "path": "1"
    },
    "2205": {
      "fn": "SafeMath.mul",
      "offset": [
        2513,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2206": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2207": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2208": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2209": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x8A6"
    },
    "2212": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2213": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2214": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2215": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "DIV",
      "path": "1"
    },
    "2216": {
      "branch": 45,
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2542
      ],
      "op": "EQ",
      "path": "1"
    },
    "2217": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E0"
    },
    "2220": {
      "branch": 45,
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2221": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2223": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2224": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2232": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2233": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2235": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2236": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2237": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2238": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2240": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2241": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2242": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2243": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "1"
    },
    "2244": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2245": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2246": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2248": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2249": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2250": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2252": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2253": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2254": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC56"
    },
    "2257": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2259": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2260": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2261": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2263": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2264": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2265": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "2266": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "1"
    },
    "2267": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2269": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2270": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2271": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2272": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "1"
    },
    "2273": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2274": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2275": {
      "fn": "SafeMath.div",
      "offset": [
        3068,
        3198
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2276": {
      "fn": "SafeMath.div",
      "offset": [
        3126,
        3133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2278": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0x4E0"
    },
    "2281": {
      "fn": "SafeMath.div",
      "offset": [
        3156,
        3157
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2282": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3160
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2283": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2285": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2286": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2287": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2289": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "1"
    },
    "2290": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2292": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2293": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2294": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "2296": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2297": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2298": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2300": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "1"
    },
    "2301": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "2334": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2335": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2336": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "POP",
      "path": "1"
    },
    "2337": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB59"
    },
    "2340": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3152,
        3191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2341": {
      "fn": "SafeMath.sub",
      "offset": [
        1288,
        1422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2342": {
      "fn": "SafeMath.sub",
      "offset": [
        1346,
        1353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2344": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x4E0"
    },
    "2347": {
      "fn": "SafeMath.sub",
      "offset": [
        1376,
        1377
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2348": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1380
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2349": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2351": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2352": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2353": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2355": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "1"
    },
    "2356": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2358": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2359": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2360": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "2362": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2363": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2364": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2366": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "1"
    },
    "2367": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2400": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2401": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2402": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "POP",
      "path": "1"
    },
    "2403": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFB"
    },
    "2406": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1372,
        1415
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2407": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3438,
        3723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2408": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3515,
        3532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2410": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2411": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2412": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2414": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2415": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2416": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2425": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2426": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3560,
        3564
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2427": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2429": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2430": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ADD",
      "path": "2"
    },
    "2431": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2432": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2433": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "op": "SUB"
    },
    "2442": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2443": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2444": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "AND",
      "path": "2"
    },
    "2445": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2446": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2451": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3551
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2452": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2454": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2455": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2456": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ADD",
      "path": "2"
    },
    "2457": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2458": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2460": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2461": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2462": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2463": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2464": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2465": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2466": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SUB",
      "path": "2"
    },
    "2467": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ADD",
      "path": "2"
    },
    "2468": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2469": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3541
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2470": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2471": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2472": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2473": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2474": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2475": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B3"
    },
    "2478": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2479": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2481": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2482": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2483": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2484": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "POP",
      "path": "2"
    },
    "2485": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "GAS",
      "path": "2"
    },
    "2486": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2487": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2488": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2489": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2490": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C7"
    },
    "2493": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2494": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2495": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2497": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2498": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2499": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2500": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2502": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2503": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2504": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "POP",
      "path": "2"
    },
    "2505": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "POP",
      "path": "2"
    },
    "2506": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "POP",
      "path": "2"
    },
    "2507": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "POP",
      "path": "2"
    },
    "2508": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2510": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2511": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2512": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2514": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2515": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "LT",
      "path": "2"
    },
    "2516": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2517": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9DD"
    },
    "2520": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2521": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2523": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2524": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2525": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2528": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3535,
        3566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3580,
        3599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2531": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3580,
        3599
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2532": {
      "branch": 43,
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3580,
        3599
      ],
      "op": "GT",
      "path": "2"
    },
    "2533": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2534": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA74"
    },
    "2537": {
      "branch": 43,
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2538": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x0"
    },
    "2540": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2541": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2542": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2544": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2545": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2546": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2555": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "SUB"
    },
    "2564": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2565": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2566": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "AND",
      "path": "2"
    },
    "2567": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2569": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2570": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ADD",
      "path": "2"
    },
    "2571": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2572": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2574": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2575": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ADD",
      "path": "2"
    },
    "2576": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2577": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2578": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2579": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2580": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2581": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2582": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2583": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2584": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "AND",
      "path": "2"
    },
    "2585": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2586": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3630
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2591": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2592": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2594": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2595": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2596": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ADD",
      "path": "2"
    },
    "2597": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2598": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2600": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2601": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2602": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2603": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2604": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2605": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SUB",
      "path": "2"
    },
    "2606": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2607": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2608": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ADD",
      "path": "2"
    },
    "2609": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2610": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2611": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2612": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3621
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2613": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2614": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2615": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2616": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2617": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2618": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA42"
    },
    "2621": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2622": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2624": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2625": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2626": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2627": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "POP",
      "path": "2"
    },
    "2628": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "GAS",
      "path": "2"
    },
    "2629": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "CALL",
      "path": "2"
    },
    "2630": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2631": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2632": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2633": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA56"
    },
    "2636": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2637": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2638": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2640": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2641": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2642": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2643": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2645": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2646": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2647": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "POP",
      "path": "2"
    },
    "2648": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "POP",
      "path": "2"
    },
    "2649": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "POP",
      "path": "2"
    },
    "2650": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "POP",
      "path": "2"
    },
    "2651": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2653": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2654": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2655": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2657": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2658": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "LT",
      "path": "2"
    },
    "2659": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2660": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6C"
    },
    "2663": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2664": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2666": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2667": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2668": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3615,
        3646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFA"
    },
    "2673": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2676": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2677": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x0"
    },
    "2679": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2680": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2681": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2683": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2684": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2685": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2694": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "op": "SUB"
    },
    "2703": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2704": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2705": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "AND",
      "path": "2"
    },
    "2706": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2708": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2709": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ADD",
      "path": "2"
    },
    "2710": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2711": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2713": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2714": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ADD",
      "path": "2"
    },
    "2715": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2716": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2717": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2718": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2719": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2720": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2721": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2722": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2723": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "AND",
      "path": "2"
    },
    "2724": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2725": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3692
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2730": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3692
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2731": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2733": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2734": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2735": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ADD",
      "path": "2"
    },
    "2736": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2737": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2739": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2740": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2741": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2742": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2743": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2744": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SUB",
      "path": "2"
    },
    "2745": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2746": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2747": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ADD",
      "path": "2"
    },
    "2748": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2749": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2750": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2751": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3683
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2752": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2753": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2754": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2755": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2756": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2757": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACD"
    },
    "2760": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2761": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2763": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2764": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2765": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2766": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "POP",
      "path": "2"
    },
    "2767": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "GAS",
      "path": "2"
    },
    "2768": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "CALL",
      "path": "2"
    },
    "2769": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2770": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2771": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2772": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE1"
    },
    "2775": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2776": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2777": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2779": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2780": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2781": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2782": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2784": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2785": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2786": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "POP",
      "path": "2"
    },
    "2787": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "POP",
      "path": "2"
    },
    "2788": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "POP",
      "path": "2"
    },
    "2789": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "POP",
      "path": "2"
    },
    "2790": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2792": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2793": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2794": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2796": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2797": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "LT",
      "path": "2"
    },
    "2798": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2799": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF7"
    },
    "2802": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2803": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2805": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2806": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2807": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3677,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "op": "POP"
    },
    "2810": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3576,
        3717
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2811": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3438,
        3723
      ],
      "op": "POP",
      "path": "2"
    },
    "2812": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3438,
        3723
      ],
      "op": "POP",
      "path": "2"
    },
    "2813": {
      "fn": "SimpleChef.safePotatoTransfer",
      "offset": [
        3438,
        3723
      ],
      "op": "POP",
      "path": "2"
    },
    "2814": {
      "fn": "SimpleChef.safePotatoTransfer",
      "jump": "o",
      "offset": [
        3438,
        3723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2815": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2816": {
      "fn": "SafeMath.add",
      "offset": [
        899,
        906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2818": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2819": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2820": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2821": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 30
    },
    "2822": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2823": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "LT",
      "path": "1"
    },
    "2824": {
      "branch": 46,
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2825": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E0"
    },
    "2828": {
      "branch": 46,
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2829": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2831": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2832": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2841": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2842": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2844": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2846": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2847": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2848": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2849": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "2851": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2853": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2854": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2855": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2856": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2889": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2891": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2892": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2893": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2894": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2895": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2896": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2897": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2898": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2899": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SUB",
      "path": "1"
    },
    "2900": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2902": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2903": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2904": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2905": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2906": {
      "fn": "SafeMath.div",
      "offset": [
        3766,
        3773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2908": {
      "fn": "SafeMath.div",
      "offset": [
        3800,
        3812
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 31
    },
    "2909": {
      "branch": 47,
      "fn": "SafeMath.div",
      "offset": [
        3793,
        3798
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2910": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE5"
    },
    "2913": {
      "branch": 47,
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2914": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2916": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2925": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2926": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2928": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2929": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2930": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2931": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2933": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2934": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2935": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2936": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "2937": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2938": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2939": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2940": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2941": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2942": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2943": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2944": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2945": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2947": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2948": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2949": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2950": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2951": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2952": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2953": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2955": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2956": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2957": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2958": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2959": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2960": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2962": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2963": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2964": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2965": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "LT",
      "path": "1"
    },
    "2966": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2967": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAA"
    },
    "2970": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2971": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2972": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2973": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2974": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2975": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2976": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2977": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2978": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2979": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2981": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2982": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB92"
    },
    "2985": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2986": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2987": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2988": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2989": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2990": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2991": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2992": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "2993": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2994": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2995": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "2996": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2997": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2999": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "1"
    },
    "3000": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3001": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3002": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD7"
    },
    "3005": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3006": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3007": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3008": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "3009": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3010": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3011": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3013": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3014": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3016": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "3017": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3020": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "EXP",
      "path": "1"
    },
    "3021": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "3022": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "NOT",
      "path": "1"
    },
    "3023": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "1"
    },
    "3024": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3025": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3026": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3028": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "1"
    },
    "3029": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3030": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3031": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3032": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3033": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3034": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3035": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3036": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3037": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3039": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3040": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3041": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3042": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "1"
    },
    "3043": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3044": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3045": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3046": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "1"
    },
    "3047": {
      "fn": "SafeMath.div",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3049": {
      "fn": "SafeMath.div",
      "offset": [
        3839,
        3840
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3050": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3836
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3051": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3052": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF1"
    },
    "3055": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3056": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "INVALID",
      "path": "1"
    },
    "3057": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3058": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DIV",
      "path": "1"
    },
    "3059": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3060": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "op": "POP"
    },
    "3066": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3067": {
      "fn": "SafeMath.sub",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3068": {
      "fn": "SafeMath.sub",
      "offset": [
        1799,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3070": {
      "fn": "SafeMath.sub",
      "offset": [
        1834,
        1846
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 32
    },
    "3071": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3072": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3073": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "GT",
      "path": "1"
    },
    "3074": {
      "branch": 48,
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3075": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4D"
    },
    "3078": {
      "branch": 48,
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3079": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3081": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3088": {
      "op": "SHL"
    },
    "3089": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3090": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3091": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3093": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3095": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3096": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3097": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3098": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3099": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3100": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3101": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3102": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3104": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3105": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3106": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3107": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3108": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3109": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3110": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3111": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3112": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3113": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3115": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3116": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3117": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3118": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3119": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3120": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3121": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3122": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3123": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3124": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3125": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3126": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3128": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3129": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3130": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAA"
    },
    "3133": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3134": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3135": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3136": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3137": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3138": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3139": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3140": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3141": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3142": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3144": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3145": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB92"
    },
    "3148": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3149": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3150": {
      "op": "POP"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "op": "POP"
    },
    "3153": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3154": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SUB",
      "path": "1"
    },
    "3155": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3156": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "6345f47f5f6e37dd369a1a4fbb6014b8a9653d7a",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./Potato.sol\";\nimport \"./Usd.sol\";\n\ncontract SimpleChef {\n    using SafeMath for uint256;\n\n    Potato public potato;\n    Usd public usd;\n\n    uint256 public startBlock;\n    uint256 public lastRewardBlock;\n    uint256 public potatoPerBlock;\n    uint256 public accPotatoPerShare;\n    address public admin;\n\n    address[] public stakers;\n    mapping(address => uint256) public stakingBalance;\n    mapping(address => uint256) public UserRewardDept;\n    mapping(address => bool) public hasStaked;\n    mapping(address => bool) public isStaking;\n\n    constructor(Potato _potato, Usd _usd) public {\n        potato = _potato;\n        usd = _usd;\n        startBlock = block.number;\n        potatoPerBlock = 1e18;\n        admin = msg.sender;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        public\n        view\n        returns (uint256)\n    {\n        return _to.sub(_from);\n    }\n\n    function update() internal {\n        if (block.number <= lastRewardBlock) {\n            return;\n        }\n        uint256 usdBalance = usd.balanceOf(address(this));\n        if (usdBalance == 0) {\n            lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(lastRewardBlock, block.number);\n        uint256 reward = multiplier.mul(potatoPerBlock);\n        potato.mint(address(this), reward);\n        accPotatoPerShare = accPotatoPerShare.add(\n            reward.mul(1e12).div(usdBalance)\n        );\n        lastRewardBlock = block.number;\n    }\n\n    function deposit(uint256 _amount) public {\n        update();\n        uint256 userBalance = stakingBalance[msg.sender];\n        if (userBalance > 0) {\n            uint256 pending = userBalance.mul(accPotatoPerShare).div(1e12).sub(\n                UserRewardDept[msg.sender]\n            );\n            if (pending > 0) {\n                safePotatoTransfer(msg.sender, pending);\n            }\n        }\n        if (_amount > 0) {\n            usd.transferFrom(address(msg.sender), address(this), _amount);\n            stakingBalance[msg.sender] = userBalance.add(_amount);\n\n            // Add user to stakers array *only* if they haven't staked already\n            if (!hasStaked[msg.sender]) {\n                stakers.push(msg.sender);\n            }\n\n            // Update staking status\n            isStaking[msg.sender] = true;\n            hasStaked[msg.sender] = true;\n        }\n        UserRewardDept[msg.sender] = userBalance.mul(accPotatoPerShare).div(\n            1e12\n        );\n    }\n\n    function withdraw(uint256 _amount) public {\n        uint256 userBalance = stakingBalance[msg.sender];\n        require(userBalance >= _amount, \"withdraw: not enough staked balance\");\n        update();\n        uint256 pending = userBalance.mul(accPotatoPerShare).div(1e12).sub(\n            UserRewardDept[msg.sender]\n        );\n        if (pending > 0) {\n            safePotatoTransfer(msg.sender, pending);\n        }\n        if (_amount > 0) {\n            stakingBalance[msg.sender] = userBalance.sub(_amount);\n            isStaking[msg.sender] = false;\n            usd.transfer(address(msg.sender), _amount);\n        }\n        UserRewardDept[msg.sender] = userBalance.mul(accPotatoPerShare).div(\n            1e12\n        );\n    }\n\n    // Safe potato transfer function, just in case if rounding error causes pool to not have enough potatos.\n    function safePotatoTransfer(address _to, uint256 _amount) internal {\n        uint256 potatoBal = potato.balanceOf(address(this));\n        if (_amount > potatoBal) {\n            potato.transfer(_to, potatoBal);\n        } else {\n            potato.transfer(_to, _amount);\n        }\n    }\n\n    function updatePotatoPerBlock(uint256 _amount) external {\n        require(msg.sender == admin, \"caller must be the admin\");\n        potatoPerBlock = _amount;\n    }\n}\n",
  "sourceMap": "69:3825:2:-:0;;;577:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:192:2;;;;;;;632:6;:16;;-1:-1:-1;;;;;632:16:2;;;-1:-1:-1;;;;;;632:16:2;;;;;;;;658:10;;;;;;;;;;;;;;;691:12;678:10;:25;730:4;713:14;:21;744:5;:18;;;;;752:10;744:18;;;69:3825;;;;;;",
  "sourcePath": "contracts/SimpleChef.sol",
  "type": "contract"
}